apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-cms-configurablecompositecommandlistener-config.xml
data:
  ConfigurableCompositeCommandListener-Config.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
        <beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

        <!-- Add an entry for output to input mapping for another SOI command
        Format:
        <util:map id="outputToInputMapping" key-type="java.lang.String" value-type="java.util.Map">
            <entry key="NAME_OF_COMPOSITE_COMMAND">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="TARGET_CMD.INPUT_PARAM_LIST.PARAMETER_NAME" value="SOURCE_CMD.INPUT_PARAMETER_NAME" />
                </map>
            </entry>
            <entry ...>
            ...
            </entry>
        </util:map>
        -->
        <util:map id="outputToInputMapping" key-type="java.lang.String" value-type="java.util.Map">
            <entry key="BEL_PAYMENT_METHOD.WRITE">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="PAYMENT_TOKEN.CREATE.TOKEN_ID" value="PAYMENT_TOKEN_ID.GENERATE.TOKEN_ID" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_TOKEN_ID" value="PAYMENT_TOKEN_ID.GENERATE.TOKEN_ID" />
                    <entry key="PAYMENT_ARRANGEMENT_ASSIGNMENT.WRITE.PAYMENT_ID" value="PAYMENT_ARRANGEMENT.WRITE.CSP_ID" />
                </map>
            </entry>
            <entry key="BEL_CUSTOMER.RETRIEVE">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="CUSTOMER_INFO.READ.CS_ID" value="CUSTOMER.READ.CS_ID" />
                    <entry key="CONTRACTS.SEARCH.CS_ID" value="CUSTOMER.READ.CS_ID" />
                    <entry key="BILLING_ACCOUNT.SEARCH.CS_ID" value="CUSTOMER.READ.CS_ID" />
                    <entry key="PAYMENT_ARRANGEMENTS.READ.CS_ID" value="CUSTOMER.READ.CS_ID" />
                </map>
            </entry>
            <entry key="BEL_PARTY.RETRIEVE">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="CUSTOMER_INFO.READ.CS_ID" value="CUSTOMER.READ.CS_ID" />
                    <entry key="ADDRESSES.READ.CS_ID" value="CUSTOMER.READ.CS_ID" />
                    <entry key="CUSTOMER_TAX_EXEMPTIONS.READ.CS_ID" value="CUSTOMER.READ.CS_ID" />
                    <entry key="CUSTOMERS.SEARCH.CS_ID_HIGH" value="CUSTOMER.READ.CS_ID" />
                </map>
            </entry>
            <entry key="BEL_BILLING_ACCOUNT.WRITE">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="BILLING_ACCOUNT_TAXEXEMPTION.WRITE.BILLING_ACCOUNT_CODE" value="BILLING_ACCOUNT.WRITE.BILLING_ACCOUNT_CODE" />
                    <entry key="BILLING_ACCOUNT_ASSIGNMENT.WRITE.BILLING_ACCOUNT_CODE" value="BILLING_ACCOUNT.WRITE.BILLING_ACCOUNT_CODE" />
                </map>
            </entry>
        </util:map>

        <!-- Add an entry for input to input mapping for another SOI command
        Format:
        <util:map id="inputToInputMapping" key-type="java.lang.String" value-type="java.util.Map">
            <entry key="NAME_OF_COMPOSITE_COMMAND">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="TARGET_CMD.INPUT_PARAM_LIST.PARAMETER_NAME" value="SOURCE_CMD.INPUT_PARAMETER_NAME" />
                </map>
            </entry>
            <entry ...>
            ...
            </entry>
        </util:map>
        -->
        <util:map id="inputToInputMapping" key-type="java.lang.String" value-type="java.util.Map">
            <entry key="BEL_PAYMENT_METHOD.WRITE">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <!-- equal attribute names -->
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_ACCNO" value="PAYMENT_DATA.VALIDATE.CSP_ACCNO" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_ACCOWNER" value="PAYMENT_DATA.VALIDATE.CSP_ACCOWNER" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKCODE" value="PAYMENT_DATA.VALIDATE.CSP_BANKCODE" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKNAME" value="PAYMENT_DATA.VALIDATE.CSP_BANKNAME" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKZIP" value="PAYMENT_DATA.VALIDATE.CSP_BANKZIP" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKCITY" value="PAYMENT_DATA.VALIDATE.CSP_BANKCITY" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKSTREET" value="PAYMENT_DATA.VALIDATE.CSP_BANKSTREET" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKSTREETNO" value="PAYMENT_DATA.VALIDATE.CSP_BANKSTREETNO" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_CCVALIDDT" value="PAYMENT_DATA.VALIDATE.CSP_CCVALIDDT" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKSTATE" value="PAYMENT_DATA.VALIDATE.CSP_BANKSTATE" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKCOUNTY" value="PAYMENT_DATA.VALIDATE.CSP_BANKCOUNTY" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKCOUNTRY" value="PAYMENT_DATA.VALIDATE.CSP_BANKCOUNTRY" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BANKCOUNTRY_PUB" value="PAYMENT_DATA.VALIDATE.CSP_BANKCOUNTRY_PUB" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_SWIFTCODE" value="PAYMENT_DATA.VALIDATE.CSP_SWIFTCODE" />
                    <!-- different attribute names -->
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_CCAG_CODE" value="PAYMENT_DATA.VALIDATE.BANK_ID" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_CCAG_CODE_PUB" value="PAYMENT_DATA.VALIDATE.BANK_ID_PUB" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_BIC" value="PAYMENT_DATA.VALIDATE.BIC" />
                    <entry key="PAYMENT_ARRANGEMENT.WRITE.CSP_IBAN" value="PAYMENT_DATA.VALIDATE.IBAN" />
                </map>
            </entry>
            <entry key="BEL_BILLING_ACCOUNT.WRITE">
                <map key-type="java.lang.String" value-type="java.lang.String">
                    <entry key="CUSTOMER.WRITE.CS_ID" value="BILLING_ACCOUNT.WRITE.CS_ID" />
                    <entry key="CUSTOMER.WRITE.CS_ID_PUB" value="BILLING_ACCOUNT.WRITE.CS_ID_PUB" />
                </map>
            </entry>
        </util:map>

        <!-- Map to configure optional sub commands.
        Format:
        <util:map id="optionalSubCommandsMapping" key-type="java.lang.String" value-type="java.util.Set">
            <entry key="NAME_OF_COMPOSITE_COMMAND">
                <set value-type="java.lang.String">
                  <value>NAME_OF_SINGLE_SOI_COMMAND</value>
                </set>
            </entry>
            <entry key="NAME_OF_COMPOSITE_COMMAND">
            ...
            </entry>
        </util:map>
        -->
        <util:map id="optionalSubCommandsMapping" key-type="java.lang.String" value-type="java.util.Set">
            <entry key="BEL_PAYMENT_METHOD.WRITE">
                <set value-type="java.lang.String">
                    <value>PAYMENT_TOKEN_ID.GENERATE</value>
                    <value>PAYMENT_TOKEN.CREATE</value>
                    <value>PAYMENT_DATA.VALIDATE</value>
                    <value>PAYMENT_ARRANGEMENT.WRITE</value>
                </set>
            </entry>
            <entry key="BEL_BILLING_ACCOUNT.WRITE">
                <set value-type="java.lang.String">
                    <value>BILLING_ACCOUNT.WRITE</value>
                    <value>BILLING_ACCOUNT_TAXEXEMPTION.WRITE</value>
                    <value>CUSTOMER.WRITE</value>
                    <value>BILLING_ACCOUNT_ASSIGNMENT.WRITE </value>
                </set>
            </entry>
        </util:map>

        <!-- Map to configure mandatory input parameter.
        Format:
        <util:map id="mandatoryParameters" key-type="java.lang.String" value-type="java.util.List">
            <entry key="NAME_OF_COMPOSITE_COMMAND">
                <map key-type="java.lang.String" value-type="java.util.List">
                    <entry key="NAME_OF_SINGLE_SOI_COMMAND">
                        <list value-type="java.lang.String">
                            <value>INPUT_PARAMETER_NAME</value>
                        </list>
                    </entry>
                </map>
            </entry>
            <entry key="NAME_OF_COMPOSITE_COMMAND">
            ...
            </entry>
        </util:map>
        -->
        <util:map id="mandatoryParameters" key-type="java.lang.String" value-type="java.util.List">
        </util:map>

        <!-- Map to configure default input parameter.
        Format:
        <util:map id="defaultParameterValues" key-type="java.lang.String" value-type="java.util.Map">
            <entry key="NAME_OF_COMPOSITE_COMMAND">
                <map key-type="java.lang.String">
                    <entry key="NAME_OF_SINGLE_SOI_COMMAND">
                        <map key-type="java.lang.String">
                            <entry key="INPUT_PARAMETER_OF_TYPE_STRING" value="STRING_VALUE"/>
                            <entry key="INPUT_PARAMETER_OF_TYPE_LONG" value="LONG_VALUE" value-type="java.lang.Long"/>
                            <entry key="INPUT_PARAMETER_OF_TYPE_CHAR" value="CHAR_VALUE" value-type="java.lang.Character"/>
                            <entry key="INPUT_PARAMETER_OF_TYPE_BOOLEAN" value="BOOLEAN_VALUE" value-type="java.lang.Boolean"/>
                            !!! The following default parameter values of complex data types Money, Date and DateTime
                                must be instantiated via bean constructor, referred to by the value-ref property
                                (see ahead, outside of this util:map for defaultParameterValues).
                            <entry key="INPUT_PARAMETER_OF_TYPE_MONEY" value-ref="MONEY_BEAN"/>
                            <entry key="INPUT_PARAMETER_OF_TYPE_DATE" value-ref="DATE_BEAN"/>
                            <entry key="INPUT_PARAMETER_OF_TYPE_DATETIME" value-ref="DATETIME_BEAN"/>
                            !!! Date and DateTime parameter values must be specified according to the SOI command specification,
                                not to the DB column specification which is usually the DATE type, covering both Date or DateTime.
                                If a DateTime format is provided for a parameter expecting a Date without time, the command execution fails
                                since the internal SVLDate object refuses to convert the time part from the default parameter value.
                        </map>
                    </entry>
                    <entry key="NAME_OF_SINGLE_SOI_COMMAND">
                    ...
                    </entry>
                </map>
            </entry>
            <entry key="NAME_OF_COMPOSITE_COMMAND">
            ...
            </entry>
        </util:map>

        <bean id="MONEY_BEAN" class="com.lhs.ccb.common.soiimpl.SVLMoneyImpl">
            < MoneyBean: double amount, String currency[ISO code] >
            <constructor-arg type="double" value="AMOUNT_VALUE"/>
            <constructor-arg type="java.lang.String" value="CURRENCY_ISO_CODE, e.g. USD"/>
        </bean>
        <bean id="DATE_BEAN" class="com.lhs.ccb.common.soiimpl.SVLDateImpl">
            < DateBean: int dayOfMonth[1-31], int month[0-11], int year >
            < !!! Note that month must be specified from [0-11] !!! >
            <constructor-arg type="int" value="DAY_OF_MONTH[1-31]"/>
            <constructor-arg type="int" value="MONTH[0-11]"/>
            <constructor-arg type="int" value="YEAR"/>
        </bean>
        <bean id="DATETIME_BEAN" class="com.lhs.ccb.common.soiimpl.SVLDateTimeImpl">
            < DateTimeBean: int year, int month[0-11], int dayOfMonth[1-31], int hour[0-23], int minute[0-59], int second[0-59] >
            < !!! Note that month must be specified from [0-11] !!! >
            <constructor-arg type="int" value="YEAR"/>
            <constructor-arg type="int" value="MONTH[0-11]"/>
            <constructor-arg type="int" value="DAY_OF_MONTH[1-31]"/>
            <constructor-arg type="int" value="HOUR[0-23]"/>
            <constructor-arg type="int" value="MINUTE[0-59]"/>
            <constructor-arg type="int" value="SECOND[0-59]"/>
        </bean>
        -->
        <util:map id="defaultParameterValues" key-type="java.lang.String" value-type="java.util.Map">
        </util:map>

    </beans>

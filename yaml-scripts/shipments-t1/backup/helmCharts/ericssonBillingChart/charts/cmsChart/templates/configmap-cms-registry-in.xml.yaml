apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-cms-registry-in.xml
data:
  Registry_IN.xml: |
    <?xml version="1.0" encoding="utf-8"?>
    <!DOCTYPE ComponentRegistry PUBLIC 'ComponentRegistry.dtd' "ComponentRegistry.dtd" >

    <ComponentRegistry>

        <Node name="FUNC_FRMWK_SRV">

            <!-- TOPLink related settings, configuration of persistent domain objects-->
            <Node name="Persistence">

                <!-- Methods to be called periodically -->
                <Node name="RefreshReferenceData">
                    <Node name="ExpiredActive" >
                        <KeyValue key="CLASS" value="com.lhs.inservices.PrepaidContract.BatchEventSender" />
                        <KeyValue key="ABSOLUTE" type="Boolean" value="true" />

                        <KeyValue key="PERIOD" type="Integer" value="20000" />
                        <KeyValue key="START" type="Integer" value="20000" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>

                        <KeyValue key="METHOD" value="processActiveExpired" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>
                     </Node>
                    <Node name="ExpiredPassive" >
                        <KeyValue key="CLASS" value="com.lhs.inservices.PrepaidContract.BatchEventSender" />
                        <KeyValue key="ABSOLUTE" type="Boolean" value="true" />

                        <KeyValue key="PERIOD" type="Integer" value="1800000" />
                        <KeyValue key="START" type="Integer" value="1800000" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>

                        <KeyValue key="METHOD" value="processPassiveExpired" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>
                     </Node>
                     <Node name="ExpiredInactive" >
                        <KeyValue key="CLASS" value="com.lhs.inservices.PrepaidContract.BatchEventSender" />
                        <KeyValue key="ABSOLUTE" type="Boolean" value="true" />

                        <KeyValue key="PERIOD" type="Integer" value="3600000" />
                        <KeyValue key="START" type="Integer" value="3600000" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>

                        <KeyValue key="METHOD" value="processInactiveExpired" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>
                     </Node>
                     <Node name="ExpiredClearance" >
                        <KeyValue key="CLASS" value="com.lhs.inservices.PrepaidContract.BatchEventSender" />

                        <KeyValue key="ABSOLUTE" type="Boolean" value="true" />

                        <KeyValue key="PERIOD" type="Integer" value="3600000" />
                        <KeyValue key="START" type="Integer" value="3600000" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>

                        <KeyValue key="METHOD" value="processClearanceExpired" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>

                     </Node>
                      <Node name="PrepaidProfile" >
                        <KeyValue key="CLASS" value="com.lhs.inservices.ReferenceData.PrepaidProfile" />

                        <!-- refresh one second after midnight -->
                        <KeyValue key="ABSOLUTE" type="Boolean" value="true" />

                        <!-- <KeyValue key="PERIOD" type="Integer" value="90000" /> -->
                        <KeyValue key="START" type="Integer" value="1000" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>
                    </Node>

                    <Node name="ExpiredInWorkStatus" >
                        <KeyValue key="CLASS" value="com.lhs.inservices.PrepaidContract.BatchCRHRequestProcessor" />
                        <KeyValue key="ABSOLUTE" type="Boolean" value="true"/>

                        <KeyValue key="PERIOD" type="Integer" value="20000"/>
                        <KeyValue key="START" type="Integer" value="10" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>

                        <KeyValue key="METHOD" value="processInWorkStatus" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>
                    </Node>

                </Node>
            </Node>

            <!-- Register the adapter to the server start-up events -->
            <Node name="StartupListeners" >
                <KeyValue key="com.lhs.inservices.Facade.PluginAdapter" value="" />
            </Node>

        </Node> <!-- End of FUNC_FRMWK_SRV -->

        <Node name="Plugin Settings">

            <Node name="Plugin names">
                <KeyValue key="adapter" value="com.lhs.inservices.Facade.PluginAdapter" comment="IN plugin adapter class"/>
            </Node>

        </Node>

        <!-- IN Plugin specific settings -->
        <Node name="IN Plugin">

            <Node name="Prepaid Lifecycle Login" >
                <KeyValue key="User" value="CIL" />
            </Node>

            <Node name="Refill not allowed for Prepaid Lifecycle States" >
                <KeyValue key="LC states" type="String" value="D" comment="Comma seperated list of lifecycle stati (LC_STATE.NAME values) for which a refill is not allowed."/>
            </Node>

            <Node name="Market configuration">
                <!--
                For each market where a prepaid Lifecycle management is needed an entry here is required.
                For markets that are not configured in this section the functionality is turned off.
                 -->
                <Node name="GSM" >
                    <KeyValue key="Prepaid Lifecycle Enabled" type="Boolean" value="true"
                        comment="Enable/disable life cycle functionality for this market. The value MUST be true if the Charging System is used."/>
                </Node> <!-- End of GSM settings -->
                <Node name="ISD" >
                    <KeyValue key="Prepaid Lifecycle Enabled" type="Boolean" value="true"
                        comment="Enable/disable life cycle functionality for this market. The value MUST be true if the Charging System is used."/>
                </Node> <!-- End of ISDN settings -->
            </Node> <!-- End of Market settings -->

            <!--  life cycle processing settings -->
            <KeyValue key="BatchProcessingChunkSize" type="Integer" value="50" />
            <KeyValue key="BatchProcessingChunkIteration" type="Boolean" value="true"
                    comment="true: Iteration over all involved contracts. / false: Switch off the iteration loop for all involved contracts in case the ABSOLUTE flag is set to false and the defined refresh period and chunk size is very short. Otherwise there is a risk of deadlocks."/>
            <KeyValue key="LifeCycleProcessorReservationTime" type="Integer" value="3600"
                    comment="Time in seconds how long a contracted prepaid profile is reserved for life cycle processing. During the reservation time no other server with life cycle processing switch on, will process the entry."/>
            <KeyValue key="LifeCycleProcessorMaxError" type="Integer" value="1000"
                    comment="Maximum number of error in the life cycle error processor. If the processing during a process run produced that many error, the process run is stopped. It will be restarted according to the 'RefreshReferenceData/Expired*' settings."/>

            <KeyValue key="PrepaidProfileIsAllowedForMixedContracts" type="Boolean" value="true" comment="Switch to indicate whether prepaid profiles are allowed for mixed contracts"/>
            <!--  together with CS contracts, the prepaid profile is always mandatory -->
            <KeyValue key="PrepaidProfileIsMandatory" type="Boolean" value="true" comment="Switch to indicate whether a prepaid profile is mandatory for the fully prepaid contracts"/>
            <KeyValue key="InitialBalanceReasonId" type="Integer" value="4" comment="Default reason for initial balance adjustment."/>
            <KeyValue key="EmptyBalanceReasonId" type="Integer" value="4" comment="Default reason for empty balance adjustment."/>
            <KeyValue key="InWorkStatusTimeout" type="Integer" value="3600000"
                comment="Timeout for the status 'in work' in milliseconds. Requests in work which are older than the current time minus timeout will be processed. Default is 1 hour."/>
            <KeyValue key="BatchSoiServer" type="String" value="CIL" comment="Define the name of SOI server to be accessed by batch processors and UDR Message Listeners."/>
            <KeyValue key="BatchSoiVersion" type="String" value="7" comment="Define the version of SOI server to be accessed by batch processors and UDR Message Listeners."/>
            <KeyValue key="ReasonForContractDeactivationPublicKey" value="DEACT" comment="Reason Code for Contract Deactivation as Result of Life Cycle Action)" />


        </Node> <!-- IN Plugin -->

        <Node name="Lifecycle Manager">
            <!-- Lifecycle manager specific settings -->

            <Node name="Lifecycle Actions">
                <KeyValue key="CalcExpD" value="com.lhs.inservices.PrepaidActions.ActionCalcExpD" comment="Calculate initial expiry dates"/>
                <KeyValue key="UpdExpD" value="com.lhs.inservices.PrepaidActions.ActionUpdExpD" comment="Update the expiry dates"/>
                <KeyValue key="BAIC" value="com.lhs.inservices.PrepaidActions.ActionBAIC" comment="Barring of all incoming calls"/>
                <KeyValue key="BAOC" value="com.lhs.inservices.PrepaidActions.ActionBAOC" comment="Barring of all outgoing calls"/>
                <KeyValue key="BICR" value="com.lhs.inservices.PrepaidActions.ActionBICR" comment="Barring of all incoming roaming calls"/>
                <KeyValue key="UnBAIC" value="com.lhs.inservices.PrepaidActions.ActionUnBAIC" comment="Unbarring of all incoming calls"/>
                <KeyValue key="UnBAOC" value="com.lhs.inservices.PrepaidActions.ActionUnBAOC" comment="Unbarring of all outgoing calls"/>
                <KeyValue key="UnBICR" value="com.lhs.inservices.PrepaidActions.ActionUnBICR" comment="Unbarring of all incoming roaming calls"/>
                <KeyValue key="InitBalAmt" value="com.lhs.inservices.PrepaidActions.ActionInitBalAmt" comment="Credit balance with the initial amount"/>
                <KeyValue key="EmptyBal" value="com.lhs.inservices.PrepaidActions.ActionEmptyBal" comment="Empty the balance and write an OCC"/>
                <KeyValue key="Disconnect" value="com.lhs.inservices.PrepaidActions.ActionDisconnect" comment="Disconnect the contract"/>
                <KeyValue key="MoveFromDummy" value="com.lhs.inservices.PrepaidActions.ActionMoveFromDummy" comment="Move contract away from the dummy customer"/>
                <KeyValue key="Deactivate" value="com.lhs.inservices.PrepaidActions.ActionDeactivate" comment="Deactivate the contract"/>

            </Node> <!-- Lifecycle Actions -->

        </Node> <!-- End of Lifecycle Manager -->

        <Node name="Lifecycle Event Mapping" >
            <!-- Specify the BSCS LC event name (column LC_EVENT.NAME) as key, and the external LC event Id (used in UDR from MM) as value -->

            <KeyValue key="ACT"  value="1"  type="Integer" comment="Activate the prepaid subscription" />
            <KeyValue key="EXA"  value="2"  type="Integer" comment="Active (Supervision) Period Expiration" />
            <KeyValue key="EXP"  value="3"  type="Integer" comment="Passive (Service fee) Period Expiration" />
            <KeyValue key="EXS"  value="4"  type="Integer" comment="Clearance/Suspension Period Expiration" />
            <KeyValue key="EXI"  value="5"  type="Integer" comment="Inactive Period Expiration" />
            <KeyValue key="REF"  value="6"  type="Integer" comment="Refill the money wallet"  />
            <KeyValue key="DIS"  value="8"  type="Integer" comment="Deactivate the whole contract"  />
            <KeyValue key="RMV"  value="9"  type="Integer" comment="Remove a prepaid profile from a contract" />
            <KeyValue key="ADDN" value="10" type="Integer" comment="Add a profile to an existing active contract with 'No Service' as prepaid state" />
            <KeyValue key="ADDA" value="11" type="Integer" comment="Add a profile to an existing active contract with 'Active' as prepaid state"  />
            <KeyValue key="INS"  value="12" type="Integer" comment="Installation,Activate a contract with a profile already assigned" />
        </Node> <!-- End of Lifecycle Event Mapping -->

        <Node name="Lifecycle State Mapping" >
            <!-- Specify the BSCS LC state name (column LC_STATE.NAME) as key, and the external LC state Id (used in UDR from MM) as value -->

            <KeyValue key="N"  value="1"  type="Integer" comment="No service" />
            <KeyValue key="A"  value="2"  type="Integer" comment="Active" />
            <KeyValue key="I"  value="3"  type="Integer" comment="Barring incomming calls (Inactive)" />
            <KeyValue key="P"  value="4"  type="Integer" comment="Barring outgoing calls (Passive)" />
            <KeyValue key="C"  value="5"  type="Integer" comment="Balance clearance (Cleared)" />
            <KeyValue key="D"  value="6"  type="Integer" comment="Subscription removal (Disconnected)"  />
        </Node> <!-- End of Lifecycle State Mapping -->

    </ComponentRegistry>

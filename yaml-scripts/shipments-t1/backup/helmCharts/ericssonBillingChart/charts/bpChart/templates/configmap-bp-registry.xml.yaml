apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-bp-registry.xml
data:
  CX_Registry.xml: |
    <?xml version="1.0" encoding="utf-8"?>
    <!DOCTYPE ComponentRegistry PUBLIC 'ComponentRegistry.dtd' "ComponentRegistry.dtd" >

    <!-- Partner CX / BSCS iX -->

    <ComponentRegistry>
    <Node name="FUNC_WCLT">

        <!--
          - Application name used for window titles.
            - This value is directly accessible through method ApplicationSettings.getApplicationName()
            - This key is also used as parent permission key for initialization of the PermissionChecker
        -->
        <KeyValue key="ApplicationName" value="BusinessPartnerManagementFullAccessRights" comment="The name of the web client application"/>

        <!-- Application version TODO: used anywhere? -->
        <KeyValue key="ApplicationVersion" value="1.0" comment="The version of the web client application"/>
        <!-- PN 00383485 : Kaiser : Feature 360900 - fritscht -->
        <KeyValue key="#NUMBER_OF_DAYS" value="180" />
        <KeyValue key="#SB_MEMO_COUNTER" value="10" />

        <!-- Application name as defined in APP_MODULES -->
        <KeyValue key="ModuleName" value="CX" comment="The module name as defined in APP_MODULES"/>

        <!-- Deployment scope. Available values are BSCS and CBIO. -->
        <KeyValue key="DeploymentScope" type="String" value="CBIO" comment="Deployment scope"/>

        <!--
          - Starts the User settings Solutionunit directly after the user has logged into the
            client. The User settings Solutionunit is a solution unit that can be used to force
            the user to do some initial settings like selecting a business unit or a dealer.
            The workflow of the User settings Solutionunit is defined by the client but the name
            of the SolutionUnit must always be "UserSettings".
        -->
        <KeyValue key="StartUserSettingsSU" type="Boolean" value="true" comment="The name of the web client application"/>

        <!-- SOI name for security initialization -->
        <KeyValue key="SoiNameForSecurity" value="SECURITY" comment="The name of the security SOI"/>

        <!-- SOI version for security initialization -->
        <KeyValue key="SoiVersionForSecurity" value="3" comment="The version of the security SOI"/>


        <!-- If true, the service box on the right hand side of the screen will be displayed -->
        <KeyValue key="ServiceBoxEnabled" value="true"/>

        <!-- The default service box workflow (it can be overwritten by defining solution unit specific workflows) -->
        <KeyValue key="DefaultServiceBoxWorkflow" value="com/lhs/cmax/servicebox/resource/DefaultServiceBoxWorkflow.xml"/>

        <!-- Option to turn on and off the porting action in CX when the license LHS_BSCS_PC25710 is on -->
        <KeyValue key="EnablePortingActions" type="Boolean" value="false" comment="Turn on or off the ability to do porting actions on CX, only available when the licence LHS_BSCS_PC25710  is active"/>
        <!-- pc-32_cosg-106 -->

        <!--
          - The implementation of the ModelContainer
          - Default is com.lhs.ccb.cfw.cda.servicelayer.model.DefaultModelContainer
          -
          - Used by SoiContainerFactory
        -->
        <KeyValue key="ModelContainerImpl" value="com.lhs.ccb.cfw.cda.servicelayer.model.WebModelContainer" comment="The implementation of the model container"/>

        <!--
          - Client/server data exchange options (it doesn't affect HTTP communication):
            - true: the client will send only changed attributes to the CORBA server
            - false: the client will send all attrubutes to the CORBA server
        -->
        <KeyValue key="SendOnlyChangedData" type="Boolean" value="true" />

        <!-- Permission checker class to be used by the client framework -->
        <KeyValue key="PermissionChecker" value="com.lhs.ccb.util.ClientPermissionChecker" />

        <!-- License Checker configuration used by the client framework -->
        <KeyValue key="LicenseModel" type="String" value="LicenseCheckModel" comment="Client site License check model to be used for license checks"/>
        <KeyValue key="LicensePropertyName" type="String" value="FEATURE_IS_VALID" comment="Property of the license check model that holds the result whether license is enabled or disabled"/>

        <!--
          - Specifies the root path where help files are stored
            - Help root path is a directory located in the web server
            - example: help path is "help". Then the root direcory for the help files is
                       http://host:port/CMS/help where http://host:port/CMS is the path of the deployed application.
            - If the root help path should have different sub directories these sub directories
              must be specified in the workflow configuration xml file. For this have a look at
              workflowconfiguration.dtd.
        -->
        <KeyValue key="HelpRootPath" value="help" />

        <!--
          - The configuration files for default models (each default model must have a configuration file)
          - used by: ModelMetaDataRepository
        -->
        <Node name="ModelConfigs">
            <KeyValue key="BSCSModels" value="com/lhs/ccb/model/resource/BSCSModelConfig.xml" />
            <KeyValue key="CustomerModel" value="com/lhs/ccb/model/resource/CustomerModelConfig.xml" />
            <KeyValue key="PromotionModel" value="com/lhs/ccb/model/resource/PromotionModelConfig.xml" />
            <KeyValue key="ContractModel" value="com/lhs/ccb/contract/resource/ContractModelConfig.xml" />
            <KeyValue key="BalanceDetailsModel" value="com/lhs/ccb/model/resource/BalanceDetailsModelConfig.xml" />
            <KeyValue key="PrepaidModel" value="com/lhs/ccb/model/resource/PrepaidModelConfig.xml" />
            <KeyValue key="BillingAccountModel" value="com/lhs/ccb/billingAccount/resource/BillingAccountModelConfig.xml" />
            <KeyValue key="ServiceModel" value="com/lhs/ccb/service/resource/ServiceModelConfig.xml" />
            <KeyValue key="SecurityModel" value="com/lhs/ccb/user/resource/SecurityModelConfig.xml" />
            <KeyValue key="BillingModel" value="com/lhs/ccb/billing/resource/BillingModelConfig.xml" />
            <KeyValue key="ESHModel" value="com/lhs/ccb/esh/resource/ESHModelConfig.xml" />
            <KeyValue key="JobModel" value="com/lhs/ccb/util/resource/JobModelConfig.xml" />
            <KeyValue key="BundleModel" value="com/lhs/cx/bundle/resource/BundleModelConfig.xml" />
            <KeyValue key="OrderModel" value="com/lhs/wclt/common/order/resource/OrderModelConfig.xml" />
            <KeyValue key="CXBatchJobModel" value="com/lhs/ccb/batchjob/resource/JobModelConfig.xml" />
        </Node>

        <!-- CMS IN plug-in setting: must be true when the CMS IN add-on is available -->
        <KeyValue key="EnableCMSINAddOn" value="true" />

        <!--
          - Global Resource bundle file for general error messages. It should be used to define
            global error messages that can occur in several pages.
            - used by: ErrorUtil class of CFW to obtain the error messages
        -->
        <KeyValue key="CommonErrorBundle" value="com/lhs/ccb/util/resource/CommonErrorsBundle" />

        <!--
          - Hook that is called from the client framework after a Service Accessor (Service Object) is created
            - this class reinitialises the Business unit and the dealer for the user
        -->
        <KeyValue key="UserInitialisation"   value="com.lhs.ccb.util.ClientUserInitialisation"/>

        <!-- Branding options -->
        <Node name="Branding">

            <!--
              -    The class that implements the branding for this application.
                If no value is specified the default framework branding implementation is used.
            -->
            <KeyValue key="Class" value="com.lhs.ccb.util.BusinessUnitBrandingAdapter"/>

            <!--
              - List all business units as nodes that have a different appearance as the default.
                The name of the node is the business unit identifier.

            <Node name="2">
                <KeyValue key="StyleSheet_bscs_Printout_PDF" value="com/lhs/ccb/rapidactivation/resource/bscs_Printout_PDF_2" comment="PrintoutPDF stylesheet used for this business unit."/>
                <KeyValue key="StyleSheet_bscs_main" value="webresources/css/bscs_main.css" comment="Path to the stylesheet used for this business unit."/>
                <KeyValue key="StyleSheet_bscs_main_expanded" value="webresources/css/bscs_main_expanded.css" comment="Path to the expanded stylesheet used for this business unit."/>
                <KeyValue key="StyleSheet_bscs_dojo" value="webresources/css/bscs_dojo.css" comment="Path to the dojo stylesheet used for this business unit."/>
            </Node>
            -->

        </Node>

        <!--
          - Comma separated list of user attributes that must be observed for changes in order to perform a SESSION.CHANGE on the reference connection.
            - note: they are stored in the user session by UserPropertiesFacade
            - used by: UserAttributesObservable.java
        -->
        <KeyValue key="ObservedUserAttributes" value="BU_ID"/>

        <!-- Class that filters the data containers before they are processed for execution (used for future dated requests) -->
        <KeyValue key="CustomizedExecutionFilter" value="com.lhs.ccb.util.GenericCommitFilter"/>

        <!--
          - For content provider contracts it's allowed only to select the TAP record type
            "Content Transaction" in the Data Exchange section.
            The value "MutuallyAgreedRecordTypes" is the primary key of table TAP_RECORD_TYPE.
            - used by: DefineDataExchangeOptionsPageController.java
        -->
        <KeyValue key="MutuallyAgreedRecordTypes" value="2" comment="Content Transaction"/>

        <!-- Begin PN 348023 lingc-->
        <!--
          - This setting is applicable to the list result of the assigned promotion packages in the customer Promotion Packages screen.
            - true: Customer and contract promotions will be visible in the list of customer Promotion Packages screen.
            - false:Only customer promotions will be shown in the customer Promotion Packages screen
        -->
            <KeyValue key="ShowAllAssignedPromotionPackages" type="Boolean" value="true" />
        <!-- End PN 348023 -->

        <!--
          - Configuration of the SOI name and version the client should connect to.
          - This configuration overrules the configuration of "soiName" and "soiVersion" in the ModelConfig files.
          - It needs to be adapted for customization purposes.
        -->
        <!-- The SOI name the client should connect to. -->
        <KeyValue key="CIL" value="CIL" comment="The name of the SOI."/>

        <!-- The SOI version the client should connect to. -->
        <KeyValue key="CIL_Version" value="7" comment="The version of the SOI."/>

        <!--
          - Client/server data read options in the customer overview.
            - true: CX will send the  command 'CUSTOMER.READ' always with SYNC_WITH_DB=TRUE when the customer
                    overview screen is opened. But there should be aware that the performance is reduced a lot.
            - false:CX sends the command 'CUSTOMER.READ' with SYNC_WITH_DB=FALSE when the customer overview screen
                    is opened    (Introduced with PN 00308805/d)
        -->
            <KeyValue key="EverRefreshCustomerOverviewSU" type="Boolean" value="false" />

        <!--
           List of files containing the client's application context configuration
         -->
        <Node name="ApplicationContextConfigs">
            <KeyValue key="rootApplicationContext-cx.xml" value=""
                      comment="The first application context configuration file of the CX client" />
        </Node>

        <!-- begin F345159_2 LeT -->
         <!-- Class that filters the data containers before they are processed for execution (used for the creation of orders) -->
        <KeyValue key="MaxHierarchyComboBoxEntries" value="49" comment="Limit of source and target combo box entries for maintaining hierarchy"/>
        <!-- End 345159_2 -->

        <!--
          - Client/server data read options in the contract overview.
            - true: CX will send the  command 'CONTRACT.READ' always with SYNC_WITH_DB=TRUE when the contract
            overview screen is opened. But there should be aware that the performance is reduced a lot.
            - false:CX sends the command 'CONTRACT.READ' with SYNC_WITH_DB=FALSE when the contract overview screen
            is opened    (Introduced with PN 00308805/d)
        -->
        <KeyValue key="AlwaysReadContractFromDatabaseWhenStartingOverview" type="Boolean" value="true"/>

    <!--
          -Valid values are "money" and "bscsMoney"
          -if no value or wrong value is configured. The default value "money" will be used.
          -money - validator uses Currency format from JAVA (MoneyValidator).
          -bscsMoney - validator uses currency format from database table CURRENCY_VERSION (BSCSMoneyValidator).
        -->
        <KeyValue key="CurrencyValidator" type="String" value="money"/>

        <!--
            This setting will help in showing dual overwrite panels(advance charge and recurring charge) support in CX(on service details page) based on the below combinations.
            MPULKTMB.ADVIND=A and this config is TRUE - Show both panels
            MPULKTMB.ADVIND=P and this config is TRUE - Show only Recurring charge panel.
            MPULKTMB.ADVIND=A and this config is FALSE - Show only Advance Charges panel.
            MPULKTMB.ADVIND=P and this config is FALSE - Show only Recurring Charges panel.
            By default, the config is "false".
        -->
        <KeyValue key="ShowDualPanelForAdvAndPastRecChg" type="Boolean" value="false" comment="Enable to show advance recurring charge and recurring charge for overwrite at same time in CX on service details page"/>

        <!-- Configures the MODE parameter when the BILLING_ACCOUNT.SEARCH loading 'Search memo' for Large Account-->
        <KeyValue key="BillingAccountMode" type="String" value="O" comment="Define the MODE parameter when the BILLING_ACCOUNT.SEARCH is going to be called when loading 'Search memo' page when called from the link for such a large account in the Memo page overview. Default value is 'O'= MODE_OWNED. Acceptable values 'L'= MODE_LA_OWNED , 'U'= MODE_USABLE"/>


    </Node>
    </ComponentRegistry>
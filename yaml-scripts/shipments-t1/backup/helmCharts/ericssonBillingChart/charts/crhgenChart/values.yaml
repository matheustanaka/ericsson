# Default values for crhgenChart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Possible values: n >= 0
replicaCount: 2
# If replicaCount > 0 following flag should be false
startJobRequest: false

imageCredentials:
  eric-bss-eb-crhgen:
    repoPath:
    pullPolicy:
    registry:
      url:
  init-wait-for-data:
    repoPath:
    pullPolicy:
    registry:
      url:
  init-wait-for-xrefs:
    repoPath:
    pullPolicy:
    registry:
      url:

images:
  eric-bss-eb-crhgen:
    name: "eric-bss-eb-crhgen"
    tag: "22.15.12"
  init-wait-for-data:
    name: "eric-bss-eb-wait-for-condition"
    tag: "22.15.12"
  init-wait-for-xrefs:
    name: "eric-bss-eb-wait-for-condition"
    tag: "22.15.12"

#DATA_RETRY_TIME, DATA_RETRY_TIME_MAX
#By default, there is no definition for a time interval in which applications try to reconnect to DaTA.
#If you set the environment variable, the value represents the time interval an application waits
#until it tries to reconnect to DaTA.
#Subsequent connection retries are performed under the following conditions:
# - A double time interval has elapsed and has exceeded a maximum of 60 seconds.
# - A double time interval has elapsed and the value specified by DATA_RETRY_TIME_MAX has been exceeded
dataRetry:
  dataRetryTime:
  dataRetryTimeMax:

resources:
  limits:
    cpu: 1000m
    memory: 5Gi
  requests:
    cpu: 100m
    memory: 64Mi

# Customizable start parameters for crhgen
crhgenDeployment:
  startParameters:
    mininterval: 1
    traceInfo: false
  # To generate tracefiles, it is necessary set the tracefile name in the variables below.
  # These files will be stored in the log PVC.
  tracingAndLogging:
    bscsErrorTimestamp: ""
    # dtaTracefile: "dta.crhgen.trc"
    dtaTracefile: ""
    # dxlTracefile: "dxl.crhgen.trc"
    dxlTracefile: ""
    # udrTracefile: "udr.crhgen.trc"
    udrTracefile: ""

crhgenJob:
  # Run crhgen in test mode
  startParameters:
    # Test mode request number
    # Conditional, only if startJobRequest is true
    # request: 1 # example value
    request: ""
    # Time to live after finished
    # ttlSecondsAfterFinished: 240 # example value
    ttlSecondsAfterFinished: ""
    traceInfo: false
  # To generate tracefiles, it is necessary set the tracefile name in the variables below.
  # These files will be stored in the log PVC.
  tracingAndLogging:
    bscsErrorTimestamp: ""
    # dtaTracefile: "dta.crhgen-job.trc"
    dtaTracefile: ""
    # dxlTracefile: "dxl.crhgen-job.trc"
    dxlTracefile: ""
    # udrTracefile: "udr.crhgen-job.trc"
    udrTracefile: ""

# A local nodeSelector definition has priority over the global definition above.
# nodeSelector: {}

# A local affinity definition has priority over the global definition.
# affinity: {}
# Example:
# affinity:
#   nodeAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1a
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1b

tnsnames:
  bscsdb: '{{ tpl .Values.global.tnsnames.bscsdb . }}'

sqlnet:
  ora: '{{ tpl .Values.global.sqlnet.ora . }}'

apiVersion: apps/v1
kind: Deployment
metadata:
  name: eric-bss-eb-pms
  labels:
    app: eb-java-pms
    chart: {{ template "eric-bss-eb-pms.chart" . }}
    {{- include "eric-bss-eb-pms.kubernetesIoInfo" . | nindent 4 }}
    heritage: {{ .Release.Service }}
  annotations:
  {{- include "eric-bss-eb-pms.productInfo" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1}}
  selector:
    matchLabels:
      app: eb-java-pms
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: eb-java-pms
        eric-bss-eb-network-soi-server: 'true'
        eric-bss-eb-network-database-client: 'true'
        eric-bss-eb-network-lem-client: 'true'
        eric-bss-eb-network-data-client: 'true'
        eric-bss-eb-network-vault-client: 'true'
        {{- include "eric-bss-eb-pms.kubernetesIoInfo" . | nindent 8 }}
      annotations:
      {{- include "eric-bss-eb-pms.productInfo" . | indent 8 }}
    spec:
      securityContext:
        {{- include "eric-bss-eb-pms.checkPodUserLoginData" . | nindent 8 }}
      {{- if $.Values.global.imageCredentials.pullSecret }}
      imagePullSecrets:
        - name: {{ $.Values.global.imageCredentials.pullSecret }}
      {{- end }}
      initContainers:
        - name: init-logging-pms
          # containerKey identifies the section inside .Values.images and .Values.imageCredentials to be used here
          {{ $templDict := dict "Values" .Values "containerKey" "init-logging-pms" }}
          image: "{{ template "eric-bss-eb-pms.registryUrl" $templDict }}/{{ template "eric-bss-eb-pms.repoPath" $templDict }}{{ index .Values "images" $templDict.containerKey "name" }}:{{ index .Values "images" $templDict.containerKey "tag" }}"
          imagePullPolicy: {{ template "eric-bss-eb-pms.pullPolicy" $templDict }}
          command: ["/bin/sh"]
          args: ["-c","sed s/{HOSTNAME}/$HOSTNAME/g /ericssonbilling/tracing.properties >> /ericssonbilling/resource/init/tracing.properties && \
                       sed s/{HOSTNAME}/$HOSTNAME/g /ericssonbilling/log4j2.xml >> /ericssonbilling/resource/init/log4j2.xml && \
                       mkdir -p /log/pms -m 750"]
          volumeMounts:
          - name: init-properties-volume
            mountPath: /ericssonbilling/resource/init
          - name: pms-tracing-properties-volume
            mountPath: /ericssonbilling/tracing.properties
            subPath: tracing.properties
          - name: pms-log4j2-xml-volume
            mountPath: /ericssonbilling/log4j2.xml
            subPath: log4j2.xml
          - name: logs-volume
            mountPath: /log
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.global.rbac.sa_roles_create }}
      serviceAccountName: {{ .Chart.Name }}-sa
      {{- end }}
      containers:
        - name: eric-bss-eb-pms
          # containerKey identifies the section inside .Values.images and .Values.imageCredentials to be used here
          {{ $templDict := dict "Values" .Values "containerKey" "eb-java-pms" }}
          image: "{{ template "eric-bss-eb-pms.registryUrl" $templDict }}/{{ template "eric-bss-eb-pms.repoPath" $templDict }}{{ index .Values "images" $templDict.containerKey "name" }}:{{ index .Values "images" $templDict.containerKey "tag" }}"
          imagePullPolicy: {{ template "eric-bss-eb-pms.pullPolicy" $templDict }}
          resources:
            limits:
              memory: "{{ .Values.resources.limits.memory}}"
              cpu: "{{ .Values.resources.limits.cpu}}"
            requests:
              memory: "{{ .Values.resources.requests.memory}}"
              cpu: "{{ .Values.resources.requests.cpu}}"
          command: ["/bin/bash"]
          args: ["-c","mkdir -p {{ .Values.global.coredumpDirectory }}/pms && ${JAVA_HOME}/bin/java \
                       {{ .Values.args.javaOpts }} \
                       {{ .Values.args.javaDebugOpts }} \
                       ${CERTIFICATE_PATH} \
                       -cp ${BSCS_RESOURCE}/init:\
                       ${BSCS_RESOURCE}/pms/standalone:\
                       ${BSCS_RESOURCE}/pms/common:\
                       ${BSCS_RESOURCE}/pms:\
                       ${BSCS_RESOURCE}:\
                       ${BSCS_RESOURCE}/jdatalib:\
                       ${BSCS_RESOURCE}/jdxlib:\
                       ${BSCS_RESOURCE}/judrlib:\
                       ${BSCS_JAR}/func_util.jar:\
                       ${BSCS_JAR}/soi.jar:\
                       ${BSCS_JAR}/func_frwmwk_cmn.jar:\
                       ${BSCS_JAR}/func_frwmwk_srv.jar:\
                       ${BSCS_JAR}/func_sop_cmn.jar:\
                       ${BSCS_JAR}/func_sop_corba.jar:\
                       ${BSCS_JAR}/func_sop_lib.jar:\
                       ${BSCS_JAR}/jdatalib.jar:\
                       ${BSCS_JAR}/jdxlib.jar:\
                       ${BSCS_JAR}/judrlib.jar:\
                       ${BSCS_JAR}/pms.jar:\
                       ${BSCS_3PP_JAR}/* \
                       -DSVAPPLHOST=`hostname` \
                       -DSVAPPLINDEX= \
                       -Doracle.jdbc.V8Compatible=true \
                       -DBSCS_RESOURCE=${BSCS_RESOURCE} \
                       -Djava.io.tmpdir=${BSCS_LOG}/pms \
                       -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager \
                       -Xlog:gc*:file={{ .Values.global.coredumpDirectory }}/pms/${HOSTNAME}_%p_%t.gc \
                       -XX:HeapDumpPath={{ .Values.global.coredumpDirectory }}/pms/${HOSTNAME}.hprof \
                       --add-opens java.base/java.lang=ALL-UNNAMED \
                       com.lhs.ccb.sfw.application.ExtendedServer \
                       -name ${HOSTNAME}"]
          env:
          - name: K8S_ENV
            value: "true"
          - name: SOISRV_DATABASE_NAME
            value: "{{ .Values.global.bscsDb }}"
          - name: SOISRV_DATABASE_PORT
            value: "{{ int .Values.global.databaseServerPort }}"
          - name: SOISRV_DATABASE_SERVER
            value: "{{ .Values.global.databaseServerName }}"
          - name: K8S_NAMING_SERVICE_LIST
            value: "{{ .Values.global.k8sNamingServiceList }}"
          {{ if .Values.global.dataHighAvailability.enable }}
          - name: DATA_CONNECT_NAME
            value: "{{ .Values.global.dataServerName }}"
          - name: DATA_CONNECT_ADDRESS
            value: "T:eric-bss-eb-data-service:{{ .Values.global.dataClusterPort }},T:eric-bss-eb-data1-service:{{ .Values.global.dataClusterPort }}"
          - name: DATA_CONNECT_MODE
            value: "0"
          {{ else }}
          - name: DATA_SERVER_ADDRESS
            value: "T:eric-bss-eb-data-service:{{ .Values.global.dataClusterPort }}"
          {{ end }}
          - name: DXL_CONTINUE_AFTER_CORRUPT
            value: "{{ .Values.global.tracingAndLogging.dxlContinueAfterCorrupt }}"
          {{ if $.Values.global.securityTls.enable }}
          - name: DATA_SSL_CONNECT
            value: "1"
          - name: DATA_CIPHER_LIST
            value: "{{ $.Values.global.securityTls.cipherList }}"
          {{ end }}
          - name: BSCSDB
            value: "bscsdb"
          {{ if .Values.global.databaseTls.enable }}
          - name: ORA_SEC_WLT
            value: "/oratns/secret"
          - name: TNS_ADMIN
            value: "/oratns"
          - name: WALLET_LOCATION
            value: "/oratns/secret"
          - name: SOISRV_TNS_ENTRY
            value: '{{ tpl .Values.tnsnames.bscsdb . | replace "\n" "" | nospace }}'
          {{ end }}
          - name: TZ
            value: "{{ .Values.global.timezone }}"
          {{ if .Values.global.ebTruststore.secretName }}
          - name: CERTIFICATE_PATH
            value: "-Djavax.net.ssl.trustStore=/ssl/{{ .Values.global.ebTruststore.trustStoreName }} \
                    -Djavax.net.ssl.trustStorePassword={{ .Values.global.ebTruststore.trustStorePassword }}"
          {{ end }}
          {{ if not $.Values.global.secretManager.enable }}
          - name: NO_SECRET_MANAGER
            value: "true"
          {{ end }}
          volumeMounts:
          - name: init-properties-volume
            mountPath: /ericssonbilling/resource/init
          - mountPath: /log
            name: logs-volume
          - name: coredump-volume
            mountPath: "{{ .Values.global.coredumpDirectory }}"
          {{ if .Values.global.databaseTls.enable }}
          - name: wallet-volume
            mountPath: /oratns/secret
          {{ end }}
          {{ if .Values.global.ebTruststore.secretName }}
          - name: eb-trust-store-volume
            mountPath: "/ssl"
            readOnly: true
          {{ end }}
          - name: pms-applicationcontext-sfw-security-openam-xml-volume
            mountPath: /ericssonbilling/resource/applicationContext-sfw-security-openAM.xml
            subPath: applicationContext-sfw-security-openAM.xml
          - name: pms-dl-integration-xml-volume
            mountPath: /ericssonbilling/resource/pms/common/DL_Integration.xml
            subPath: DL_Integration.xml
          - name: tnsnames-ora-volume
            mountPath: /oratns/tnsnames.ora
            subPath: tnsnames.ora
          - name: sqlnet-ora-volume
            mountPath: /oratns/sqlnet.ora
            subPath: sqlnet.ora
          - mountPath: /workdir/PWDMGR_SECURITY
            name: pwdmgr-security-volume
          - name: pms-jacorb-properties-volume
            mountPath: /ericssonbilling/resource/jacorb.properties
            subPath: jacorb.properties
          - name: pms-database-properties-volume
            mountPath: /ericssonbilling/resource/database.properties
            subPath: database.properties
          - name: pms-rootapplicationcontext-pms-volume
            mountPath: /ericssonbilling/resource/pms/standalone/rootApplicationContext-pms.xml
            subPath: rootApplicationContext-pms.xml
          - name: vault-clientcfg-xml-volume
            mountPath: /ericssonbilling/resource/vault-clientcfg/vault-clientcfg.xml
            subPath: vault-clientcfg.xml
          {{ if .Values.global.securityTls.enable }}
          - name: tls-volume
            mountPath: "/tls/connect"
            readOnly: true
          {{ end }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "/ericssonbilling/scripts/pre-stop_pms.sh"]
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- else if .Values.global.nodeSelector }}
      nodeSelector: {{ toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- else if .Values.global.affinity }}
      affinity: {{ toYaml .Values.global.affinity | nindent 8 }}
      {{- end }}
      volumes:
      {{ if .Values.global.securityTls.enable }}
      - name: tls-volume
        secret:
          secretName: "{{ .Values.global.securityTls.clientSecretName }}"
          items:
          - key: {{ .Values.global.securityTls.trustedCertificateKey }}
            path: certificate.pem
      {{ end }}
      - name: logs-volume
        persistentVolumeClaim:
          claimName: eric-bss-eb-pvc-logs
      - name: coredump-volume
        persistentVolumeClaim:
          claimName: eric-bss-eb-pvc-coredump
      - name: init-properties-volume
        emptyDir: {}
      - name: pms-tracing-properties-volume
        configMap:
          name: {{ .Values.overrideConfigmap.tracingProperties | default "eric-bss-eb-pms-tracing.properties" }}
      - name: pms-log4j2-xml-volume
        configMap:
          name: {{ .Values.overrideConfigmap.log4j2xml | default "eric-bss-eb-pms-log4j2.xml" }}
      - name: tnsnames-ora-volume
        configMap:
          name: eric-bss-eb-pms-tnsnames.ora
      - name: sqlnet-ora-volume
        configMap:
          name: eric-bss-eb-pms-sqlnet.ora
      - name: pms-database-properties-volume
        configMap:
          name: eric-bss-eb-pms-database.properties
      {{ if .Values.global.databaseTls.enable }}
      - name: wallet-volume
        secret:
          secretName: "{{ .Values.global.databaseTls.clientSecretName }}"
      {{ end }}
      {{ if .Values.global.ebTruststore.secretName }}
      - name: eb-trust-store-volume
        secret:
          secretName: {{ .Values.global.ebTruststore.secretName }}
      {{ end }}
      - name: vault-clientcfg-xml-volume
        configMap:
          name: eric-bss-eb-pms-vault-clientcfg.xml
      - name: pms-applicationcontext-sfw-security-openam-xml-volume
        configMap:
          name: {{ .Values.overrideConfigmap.applicationcontextSfwSecurityOpenamXml | default "eric-bss-eb-pms-applicationcontext-sfw-security-openam.xml" }}
      - name: pms-dl-integration-xml-volume
        configMap:
          name: eric-bss-eb-pms-dl-integration.xml
      - name: pwdmgr-security-volume
        persistentVolumeClaim:
          claimName: eric-bss-eb-pvc-pwdmgr-security
      - name: pms-jacorb-properties-volume
        configMap:
          name: eric-bss-eb-pms-jacorb.properties
      - name: pms-rootapplicationcontext-pms-volume
        configMap:
          name: {{ .Values.overrideConfigmap.rootApplicationContextPmsXml | default "eric-bss-eb-pms-rootapplicationcontext-pms.xml" }}
# Default values for gmdextChart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imageCredentials:
  eric-bss-eb-gmdext:
    repoPath:
    pullPolicy:
    registry:
      url:
  eric-bss-eb-rdh-udmap:
    repoPath:
    pullPolicy:
    registry:
      url:
  init-wait-for-data:
    repoPath:
    pullPolicy:
    registry:
      url:
  init-wait-for-xrefs:
    repoPath:
    pullPolicy:
    registry:
      url:

images:
  eric-bss-eb-gmdext:
    name: "eric-bss-eb-gmdext"
    tag: "22.15.12"
  eric-bss-eb-rdh-udmap:
    name: "eric-bss-eb-rdh"
    tag: "22.15.12"
  init-wait-for-data:
    name: "eric-bss-eb-wait-for-condition"
    tag: "22.15.12"
  init-wait-for-xrefs:
    name: "eric-bss-eb-wait-for-condition"
    tag: "22.15.12"

resources:
  limits:
    cpu: 1000m
    memory: 5Gi
  requests:
    cpu: 100m
    memory: 64Mi

rdhUdmap:
  traceLevel: 0
  useSlave: "-useSlave 1"
  dataTimeout: "-w -1"
  optionalParameters: ""
  envVariables:
    shmMaxEnvironments: "20"
    shmMaxSectors: "10"
    shmMaxSegments: "1000"
    shmMinSegmentSize: "65536"
  resources:
    limits:
      cpu: 1
      memory: 5Gi
    requests:
      cpu: 100m
      memory: 64Mi
  # To generate tracefiles, it is necessary set the tracefile name in the variables below.
  # These files will be stored in the log PVC.
  tracingAndLogging:
    bscsErrorTimestamp: ""
    # dtaTracefile: "dta.rdh-udmap.trc"
    dtaTracefile: ""
    # dxlTracefile: "dxl.rdh-udmap.trc"
    dxlTracefile: ""
    # udrTracefile: "udr.rdh-udmap.trc"
    udrTracefile: ""

gmdextDeployments:
  - name: "gmdextsender"
    replicaCount: 2
    startParameters: "-n 50 -s 1 -t WARNING -w 0 -wi 1 -flush -mode send"
    tracingAndLogging:
      birdTraceLevel:
      bscsErrorTimestamp: ""
      # dtaTracefile: "dta.gmdext.sender.trc"
      dtaTracefile: ""
      # dxlTracefile: "dxl.gmdext.sender.trc"
      dxlTracefile: ""
      # udrTracefile: "udr.gmdext.sender.trc"
      udrTracefile: ""
  - name: "gmdextreceiver"
    replicaCount: 2
    startParameters: "-n 50 -s 1 -t WARNING -w 0 -wi 1 -flush -mode receive"
    tracingAndLogging:
      birdTraceLevel:
      bscsErrorTimestamp: ""
      # dtaTracefile: "dta.gmdext.receiver.trc"
      dtaTracefile: ""
      # dxlTracefile: "dxl.gmdext.receiver.trc"
      dxlTracefile: ""
      # udrTracefile: "udr.gmdext.receiver.trc"
      udrTracefile: ""

#DATA_RETRY_TIME, DATA_RETRY_TIME_MAX
#By default, there is no definition for a time interval in which applications try to reconnect to DaTA.
#If you set the environment variable, the value represents the time interval an application waits
#until it tries to reconnect to DaTA.
#Subsequent connection retries are performed under the following conditions:
# - A double time interval has elapsed and has exceeded a maximum of 60 seconds.
# - A double time interval has elapsed and the value specified by DATA_RETRY_TIME_MAX has been exceeded
dataRetry:
  dataRetryTime:
  dataRetryTimeMax:

gmdextRacSetup:
  waitTime: 500
  totalWaitTime: 30
  numAttempts: 60

#A local nodeSelector definition has priority over the global definition.
nodeSelector: {}

# A local affinity definition has priority over the global definition.
# affinity: {}
# Example:
# affinity:
#   nodeAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1a
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1b

#Example:
#nodeSelector:
#  kubernetes.io/hostname: "<hostname>"

tnsnames:
  bscsdb: '{{ tpl .Values.global.tnsnames.bscsdb . }}'

sqlnet:
  ora: '{{ tpl .Values.global.sqlnet.ora . }}'

# Default values for dmfChart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageCredentials:
    # Conditional, if path names are used in the image registry: Defines the repository path for images pulled from the image registry for every container.
    # Can also be set per container for the subcharts. Must be set in combination with the URL to locate the images in the image registry.
    # repoPath: proj-eric-bss-eb-released  # example value
    repoPath:
    # Optional: Defines the pull policy used when images are pulled on helm install/upgrade.
    # Setting it to "Always" may impact operational performance on helm install/upgrade.
    # pullPolicy: IfNotPresent      # Default value
    pullPolicy: IfNotPresent
    registry:
      # Mandatory: Defines the URL to the image registry for every container.
      # Can also be set per container for the subcharts.
      # url: localhost:32000  # example value
      url:
    # Optional: Defines the image pull secret used when images are pulled on helm install/upgrade.
    # The secret is used to authenticate against the Docker registry.
    pullSecret:

  # The mode in which the system is deployed.
  # Possible values: eb, ebdmp (default)
  useDeploymentMode: "ebdmp"

  # Mandatory: The UID to run the entrypoint of the container processes of the pods.
  #            If not set, this value defaults in Kubernetes to the user specified in the image metadata.
  #            Therefore the parameter is mandatory so that all of EB uses the same UID.
  # runAsUser: 1001  # example value as integer
  runAsUser: null
  # Mandatory: The GID to run the entrypoint of the container process. Uses runtime default if unset.
  #            May also be set in SecurityContext. If set in both SecurityContext and PodSecurityContext,
  #            the value specified in SecurityContext takes precedence for that container.
  # runAsGroup: 1002  # example value as integer
  runAsGroup: null
  # Mandatory: A special supplemental group that applies to all containers in a pod.
  # fsGroup: 1003  # example value as integer
  fsGroup: null


  # To constrain pods with specific labels. (E.g. Availability zone)
  affinity: {}
  # Example:
  # affinity:
  #   nodeAffinity:
  #     preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 50
  #       preference:
  #         matchExpressions:
  #         - key: topology.kubernetes.io/zone
  #           operator: In
  #           values:
  #           - us-east-1a
  #     - weight: 50
  #       preference:
  #         matchExpressions:
  #         - key: topology.kubernetes.io/zone
  #           operator: In
  #           values:
  #           - us-east-1b

  # Standard EB database scripts are copied to {eric-bss-eb-pvc-dbscripts}/{shipment-version}/database
  # *on every installation*. Do not edit these files, they may be overwritten. If you need to edit DB scripts,
  # make a copy of the entire /database to {eric-bss-eb-pvc-dbscripts}/{YOUR-version}/database
  # and change this value to {YOUR-version}
  dbscriptsVersion: "22.15.12"

  ### Global configuration related to Database connection: ###
  # Global configuration related to Oracle secure connection using TLS.
  # These independent settings have to be changed consistently:
  # 1) Set switch databaseTls to true
  # 2) Specify cipherSuites for according to the Oracle version, otherwise the default is used.
  #   - Please see the Oracle database security guide for recommended cipher suites
  # 3) Use TCPS instead of TCP
  # 4) Specify secure DB connect parameters
  databaseTls:
    # Switch to enable databaseTls (secure communication between database client and database server).
    # enable: true  # example value
    enable: true
    # Conditional, if databaseTls.enable=true: Name of the encryption key file
    # trustedCertificateKey: "cwallet.sso"  # example value
    trustedCertificateKey: "cwallet.sso"
    # Conditional, if databaseTls.enable=true: Name of the secret file of the database client.
    # clientSecretName: "eric-bss-eb-wallet-secret"  # example value
    clientSecretName: "eric-bss-eb-wallet-secret"
    # Conditional, if databaseTls.enable=true: The cipherSuites to be used.
    # cipherSuites: "(TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA)"  # example value
    cipherSuites: "(TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA)"
    # Conditional, if databaseTls.enable=true: The protocol to be used. The protocol can be TCPS for secure connection, or TCP for insecure connection.
    # protocol: "TCPS"  # example value
    protocol: "TCPS"
    #Conditional, if databaseTls.enable=true: Specify the distinguished name (DN) of the bscs database server.
    # sslServerCertDNbscsDb: "cn=sales,cn=OracleContext,dc=us,dc=acme,dc=com"  # example value
    # sslServerCertDNrtxDb: "cn=sales,cn=OracleContext,dc=us,dc=acme,dc=com"  # example value
    sslServerCertDNbscsDb: ""
    sslServerCertDNrtxDb: ""

  # Specify secure database connection parameters:
  # When using the Oracle TLS secure connection, the secure database configuration can be identified by sending:
  # tnsping < secureDatabaseConnectString  >.
  # (The secureDatabaseConnectString is the Name of the database connection defined in tnsnames.ora.)
  # This shows the DBName, host and port that needs to be entered in the lines below.
  # Note that secure and insecure database connections use different ports for the same database.

  ### Connection parameters for main database. ###
  # Mandatory: Name of the main database.
  # bscsDb: "bscsdb"  # example value
  bscsDb: ""
  # Mandatory: Domain name (FQDN) or IP address of the main database server.
  # databaseServerName: "myDatabaseServer.myDomain.com"  # example value
  # databaseServerName: "10.120.135.122"  # example value
  databaseServerName: ""
  # Mandatory: Port on the main database server.
  # databaseServerPort: "1921"  # example value
  databaseServerPort: ""

  ### Connection parameters for UDR database. ###
  # Same conditionality and parameter description as for main database.
  rtxDb: ""
  rtxDatabaseServerName: ""
  rtxDatabaseServerPort: ""

  ### TNSNAMES parameters for BSCS database. ###
  # Mandatory: Configuration of tnsnames.ora for BSCS and RTX databases
  tnsnames:
    bscsdb: |-
      (DESCRIPTION=
        (SDU=8192)
        (ADDRESS_LIST=
          (ADDRESS= (PROTOCOL={{ .Values.global.databaseTls.protocol }})
                    (Host={{ .Values.global.databaseServerName }})
                    (Port={{ .Values.global.databaseServerPort }})
          )
        )
        (CONNECT_DATA= (SERVICE_NAME={{ .Values.global.bscsDb }})
        (SECURITY= (SSL_SERVER_CERT_DN='{{.Values.global.databaseTls.sslServerCertDNbscsDb}}'))
        )
      )
    rtxdb: |-
      (DESCRIPTION=
        (SDU=8192)
        (ADDRESS_LIST=
          (ADDRESS= (PROTOCOL={{ .Values.global.databaseTls.protocol }})
                    (Host={{ .Values.global.rtxDatabaseServerName }})
                    (Port={{ .Values.global.rtxDatabaseServerPort }})
          )
        )
        (CONNECT_DATA= (SERVICE_NAME={{ .Values.global.rtxDb }})
        (SECURITY= (SSL_SERVER_CERT_DN='{{.Values.global.databaseTls.sslServerCertDNrtxDb}}'))
        )
      )

  ### SQLNET parameters for BSCS database. ###
  # Mandatory: Configuration of minimum sqlnet.ora
  sqlnet:
    ora: |-
      NAMES.DIRECTORY_PATH=(tnsnames,ezconnect)
      SQLNET.ALLOWED_LOGON_VERSION_SERVER=11
      # secure connection part
      SQLNET.AUTHENTICATION_SERVICES={{.Values.global.databaseTls.protocol}}
      SSL_CIPHER_SUITES={{.Values.global.databaseTls.cipherSuites}}
      WALLET_LOCATION=(SOURCE=(METHOD=FILE)(METHOD_DATA=(DIRECTORY=/oratns/secret)))
      # Possible values for SSL_VERSION: undetermined, 1.0, 1.1, 1.2. Version "3.0" does not work and must not be used.
      SSL_VERSION=1.2

  # Mandatory: Local time zone used for time conversions.
  # timezone: "CET"  # example value
  timezone: "UTC"

  # Mandatory: NLS language used for the conversion to and from the database character set.
  # nlsLang: "_.WE8ISO8859P15"  # example value
  nlsLang: "_.WE8ISO8859P15"

  # Global configuration related to the ForgeRock external identity management system.
  forgerock:
    # Conditional, if LDAP is used: Connection to the LDAP server. Format: ldaps://<FQDN>:<port>
    # ldapServer: "ldaps://myLdapServer.myDomain.com:1921"  # example value
    ldapServer: ""

  # Global configuration related to the external secrets management system.
  secretManager:
    # Enable usage of secrets management system. If the value is set false no external secrets manager will be used.
    # Note: switching the value to "false" requires a license
    enable: true
    # Vault client configuration (mandatory, if secretManager is enabled)
    vault:
      # Connection to the vault server. Format: https://<FQDN>:<port>
      # Example: vaultServerAddress: "https://myHostName.myDomain.com:8200
      vaultServerAddress: ""

  # Global configuration of the client truststore for eb applications acting as clients of external servers such as LDAP or Vault
  # The truststore must contain all certificates required for the external servers.
  ebTruststore:
    # Name of the secret.
    # If defined, secure communication to ForgeRock is done.
    # secretName: "eric-bss-eb-truststore-secret"  # example value
    secretName:
    # Name of the trust store that is used to securely connect to external servers.
    # trustStoreName: "eb.truststore"  # example value
    trustStoreName:
    # Password for the trust store that is used to securely connect to external servers
    trustStorePassword:

  # RBAC
  # Global configuration related to role-based access control (RBAC):
  rbac:
    # Create service accounts [true,false]
    sa_roles_create: true  # example value

  # DaTA
  # Global configuration related to secure DaTA connections via TLS.
  securityTls:
    # Switch to enable secure connections for DaTA.
    enable: false  # example value
    # client
    # Conditional, if securityTls.enable=true: client-side key.
    trustedCertificateKey: "Certificate"  # example value
    # Conditional, if securityTls.enable=true: client-side secret name.
    clientSecretName: "eric-bss-eb-client-certificate-secret"  # example value
    # server
    # Conditional, if securityTls.enable=true: server-side key.
    dataServerKeystoreKey: "ServerKeystore"  # example value
    # Conditional, if securityTls.enable=true: Password for server-side keystore.
    dataKeystorePasswordKey: ""
    # Conditional, if securityTls.enable=true: server-side secret name.
    serverSecretName: "eric-bss-eb-data-keystore-secret"  # example value

  # Password Manager
  # Global configuration related to Syslog Appender which is used to send messages to a remote syslog daemon via TLS.
  SyslogAppenderSecurityTls:
    # Switch to enable secure connections for SecServer.
    enable: false
    # Host to connect on Syslog server
    hostSyslogAppender: "127.0.0.1"  # example value
    # Port to connect on Syslog server
    portSyslogAppender: "6514"  # example value
    # client
    # Conditional, if SyslogAppenderSecurityTls.enable=true: syslog key.
    syslogServerKeystoreKey: "ServerKeystore"  # example value
    # Conditional, if SyslogAppenderSecurityTls.enable=true: syslog password.
    syslogKeystorePasswordKey: ""
    # Conditional, if SyslogAppenderSecurityTls.enable=true: client-side secret name.
    syslogServerKeystoreSecretName: "eric-bss-eb-syslog-keystore-secret"  # example value
    # Conditional, if SyslogAppenderSecurityTls.enable=true: server-side secret name.
    syslogServerTrustStoreSecretName: "eric-bss-eb-syslog-truststore-secret"  # example value
    # Path where the truststore and keystore files are created
    syslogTlsPath: "/tls/syslog/"  # example value

#############################################################################################
### In the following section configuration parameters of local charts can be overwritten.
### Specify configuration parameters from local charts here in the
### global values.yaml / my_values.yaml file in the following cases:
###   - If a parameter value is site-specific, i.e. the parameter value needs to be
###     adapted per installation.
###   - Overwrite default values with site-specific values.
#############################################################################################

# Overwrite default configuration of the networkpolicies chart.
eric-bss-eb-pwdmgr-networkpolicies:
  enabled: true
  # Networkpolicy for the LDAP server used by EB.
  ldap:
    # Conditional, if ldap is used:
    # CIDR (containing IP adress and network mask) of the LDAP server
    # cidr: "10.0.0.0/32"  # example value
    cidr: ""
    # Conditional, if ldap is used:
    # Port of the LDAP server
    # port: "1921"  # example value
    port: ""

  vault:
    # Conditional, if vault is used:
    # CIDR (containing IP address and network mask) of the vault server
    # cidr: "10.0.0.0/32"  # example value
    cidr: ""
    # Port of the vault server
    # port: "8200"  # example value
    port: ""


# ADP rule GL-D1121-033: All charts must be enabled by default.
# If a chart shall not be installed, the user can override these settings in a my_values.yaml file.
# Note: Some charts are enabled above in the chart specific overwrite section.
eric-bss-eb-pwdmgr-rbac: {enabled: true}
eric-bss-eb-pwdmgr: {enabled: true}

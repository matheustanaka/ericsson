{{- range $index, $fohJob := .Values.fohJobs }}
{{- if $.Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: eric-bss-eb-foh-batch.{{ $index }}.{{ $fohJob.name | nospace | lower | replace "_" "-" | trunc 20 }}
  labels:
    app: eric-bss-eb-foh
    chart: {{ template "eric-bss-eb-foh.chart" $ }}
    {{- include "eric-bss-eb-foh.kubernetesIoInfo" . | nindent 4 }}
    heritage: {{ $.Release.Service }}
  annotations:
  {{- include "eric-bss-eb-foh.productInfo" . | indent 4 }}
spec:
  schedule: "{{ $fohJob.schedule }}"
  failedJobsHistoryLimit: {{ int $.Values.CronJob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ int $.Values.CronJob.successfulJobsHistoryLimit }}
  suspend: {{ $.Values.global.suspendCronJobs.foh }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: eric-bss-eb-foh
            {{- include "eric-bss-eb-foh.kubernetesIoInfo" . | nindent 12 }}
            eric-bss-eb-network-database-client: 'true'
            eric-bss-eb-network-data-client: 'true'
            eric-bss-eb-network-vault-client: 'true'
          annotations:
          {{- include "eric-bss-eb-foh.productInfo" . | indent 12 }}
        spec:
          terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
          securityContext:
            {{- include "eric-bss-eb-foh.checkPodUserLoginData" . | nindent 12 }}
          {{- if $.Values.global.imageCredentials.pullSecret }}
          imagePullSecrets:
            - name: {{ $.Values.global.imageCredentials.pullSecret }}
          {{- end }}
          containers:
            - name: foh-batch
              # containerKey identifies the section inside .Values.images and .Values.imageCredentials to be used here
              {{ $templDict := dict "Values" .Values "containerKey" "foh-batch" }}
              image: "{{ template "eric-bss-eb-foh.registryUrl" $templDict }}/{{ template "eric-bss-eb-foh.repoPath" $templDict }}{{ index .Values "images" $templDict.containerKey "name" }}:{{ index .Values "images" $templDict.containerKey "tag" }}"
              imagePullPolicy: {{ template "eric-bss-eb-foh.pullPolicy" $templDict }}
              resources:
                limits:
                  memory: "{{ $.Values.resources.limits.memory}}"
                  cpu: "{{ $.Values.resources.limits.cpu}}"
                requests:
                  memory: "{{ $.Values.resources.requests.memory}}"
                  cpu: "{{ $.Values.resources.requests.cpu}}"
              env:
              - name: K8S_ENV
                value: "true"
              {{ if $.Values.global.databaseTls.enable }}
              - name: ORA_SEC_WLT
                value: "/oratns/secret"
              {{ end }}
              {{ if $.Values.tracingAndLogging }}
              {{ if $.Values.tracingAndLogging.udrTracefile }}
              - name: UDR_TRACEFILE
                value: "{{ $.Values.tracingAndLogging.udrTracefile }}"
              {{ end }}
              {{ if $.Values.tracingAndLogging.dxlTracefile }}
              - name: DXL_TRACEFILE
                value: "{{ $.Values.tracingAndLogging.dxlTracefile }}"
              {{ end }}
              {{ if $.Values.tracingAndLogging.bscsErrorTimestamp }}
              - name: BSCS_ERROR_TIMESTAMP
                value: "{{ $.Values.tracingAndLogging.bscsErrorTimestamp }}"
              {{ end }}
              {{ if $.Values.tracingAndLogging.dtaTracefile }}
              - name: DTA_TRACEFILE
                value: "{{ $.Values.tracingAndLogging.dtaTracefile }}"
              {{ end }}
              {{ end }}
              - name: DXL_CONTINUE_AFTER_CORRUPT
                value: "{{ $.Values.global.tracingAndLogging.dxlContinueAfterCorrupt }}"
              - name: NLS_LANG
                value: "{{ $.Values.global.nlsLang }}"
              {{ if $.Values.global.dataHighAvailability.enable }}
              - name: DATA_CONNECT_NAME
                value: "{{ $.Values.global.dataServerName }}"
              - name: DATA_CONNECT_ADDRESS
                value: "T:eric-bss-eb-data-service:{{ $.Values.global.dataClusterPort }},T:eric-bss-eb-data1-service:{{ $.Values.global.dataClusterPort }}"
              - name: DATA_CONNECT_MODE
                value: "0"
              {{ else }}
              - name: DATA_SERVER_ADDRESS
                value: "T:eric-bss-eb-data-service:{{ $.Values.global.dataClusterPort }}"
              {{ end }}
              - name: DATABASE_SERVER_NAME
                value: "{{ $.Values.global.databaseServerName }}"
              - name: DATABASE_SERVER_PORT
                value: "{{ $.Values.global.databaseServerPort }}"
              - name: OPTIONS
                value: "{{ $fohJob.startParameters }} "
              - name: TZ
                value: "{{ $.Values.global.timezone }}"
              {{ if not $.Values.global.secretManager.enable }}
              - name: NO_SECRET_MANAGER
                value: "true"
              {{ end }}
              command: ["/bin/bash"]
              args: ["-c", "ulimit -c unlimited && mkdir -p {{ .Values.global.coredumpDirectory }} && ./foh ${OPTIONS}"]
              volumeMounts:
              - name: ctrl-volume
                mountPath: /workdir/CTRL
              - name: xref-volume
                mountPath: /workdir/XREF
              - name: pwdmgr-security-volume
                mountPath: /workdir/PWDMGR_SECURITY
              - name: logs-volume
                mountPath: /log
              - name: coredump-volume
                mountPath: "{{ .Values.global.coredumpDirectory }}"
              - name: mp-volume
                mountPath: /workdir/MP
              - name: tnsnames-ora-volume
                mountPath: /oratns/tnsnames.ora
                subPath: tnsnames.ora
              - name: sqlnet-ora-volume
                mountPath: /oratns/sqlnet.ora
                subPath: sqlnet.ora
              {{ if $.Values.global.databaseTls.enable }}
              - name: wallet-volume
                mountPath: "/oratns/secret"
              {{ end }}
              {{ if and ($.Values.global.secretManager.enable) ($.Values.global.secretManager.vault.caSecretName) }}
              - name: secretmanager-tls-volume
                mountPath: "/tls/secretManager/vault"
                readOnly: true
              {{ end }}
              - name: vault-clientcfg-xml-volume
                mountPath: /ericssonbilling/resource/vault-clientcfg/vault-clientcfg.xml
                subPath: vault-clientcfg.xml
              - name: vault-clientcfg-dtd-volume
                mountPath: /ericssonbilling/resource/vault-clientcfg/vault-clientcfg.dtd
                subPath: vault-clientcfg.dtd
        {{- if $.Values.nodeSelector }}
        nodeSelector: {{ toYaml $.Values.nodeSelector | nindent 10 }}
        {{- else if $.Values.global.nodeSelector }}
        nodeSelector: {{ toYaml $.Values.global.nodeSelector | nindent 10 }}
        {{- end }}
        {{- if $.Values.affinity }}
        affinity: {{ toYaml $.Values.affinity | nindent 10 }}
        {{- else if $.Values.global.affinity }}
        affinity: {{ toYaml $.Values.global.affinity | nindent 10 }}
        {{- end }}
          restartPolicy: Never
          volumes:
          - name: ctrl-volume
            persistentVolumeClaim:
              claimName: eric-bss-eb-pvc-pids
          - name: xref-volume
            persistentVolumeClaim:
              claimName: eric-bss-eb-pvc-xref
          - name: pwdmgr-security-volume
            persistentVolumeClaim:
              claimName: eric-bss-eb-pvc-pwdmgr-security
          - name: logs-volume
            persistentVolumeClaim:
              claimName: eric-bss-eb-pvc-logs
          - name: coredump-volume
            persistentVolumeClaim:
              claimName: eric-bss-eb-pvc-coredump
          - name: mp-volume
            persistentVolumeClaim:
              claimName: eric-bss-eb-pvc-exchange-files-out
          - name: tnsnames-ora-volume
            configMap:
              name: eric-bss-eb-foh-tnsnames.ora
          - name: sqlnet-ora-volume
            configMap:
              name: eric-bss-eb-foh-sqlnet.ora
          - name: vault-clientcfg-xml-volume
            configMap:
              name: eric-bss-eb-foh-vault-clientcfg.xml
          - name: vault-clientcfg-dtd-volume
            configMap:
              name: eric-bss-eb-foh-vault-clientcfg.dtd
          {{ if and ($.Values.global.secretManager.enable) ($.Values.global.secretManager.vault.caSecretName) }}
          - name: secretmanager-tls-volume
            secret:
              secretName: "{{ $.Values.global.secretManager.vault.caSecretName }}"
              items:
              - key: {{ $.Values.global.secretManager.vault.caCertificate }}
                path: ca.pem
          {{ end }}
          {{ if $.Values.global.databaseTls.enable }}
          - name: wallet-volume
            secret:
              secretName: "{{ $.Values.global.databaseTls.clientSecretName }}"
          {{ end }}
---
{{- end}}

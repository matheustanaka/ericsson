# Default values for gmdresdataChart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imageCredentials:
  eric-bss-eb-gmdresdata:
    repoPath:
    pullPolicy:
    registry:
      url:
  init-wait-for-data:
    repoPath:
    pullPolicy:
    registry:
      url:
  init-wait-for-xrefs:
    repoPath:
    pullPolicy:
    registry:
      url:

images:
  eric-bss-eb-gmdresdata:
    name: "eric-bss-eb-gmdresdata"
    tag: "22.15.12"
  init-wait-for-data:
    name: "eric-bss-eb-wait-for-condition"
    tag: "22.15.12"
  init-wait-for-xrefs:
    name: "eric-bss-eb-wait-for-condition"
    tag: "22.15.12"

replicaCount: 2

resources:
  limits:
    cpu: 1000m
    memory: 5Gi
  requests:
    cpu: 100m
    memory: 64Mi

gmdresdataDeployment:
  startParameters: "-t WARNING -w 0 -wi 1"

#DATA_RETRY_TIME, DATA_RETRY_TIME_MAX
#By default, there is no definition for a time interval in which applications try to reconnect to DaTA.
#If you set the environment variable, the value represents the time interval an application waits
#until it tries to reconnect to DaTA.
#Subsequent connection retries are performed under the following conditions:
# - A double time interval has elapsed and has exceeded a maximum of 60 seconds.
# - A double time interval has elapsed and the value specified by DATA_RETRY_TIME_MAX has been exceeded
dataRetry:
  dataRetryTime:
  dataRetryTimeMax:

gmdresdataRacSetup:
  waitTime: 500
  totalWaitTime: 30
  numAttempts: 60

# To generate tracefiles, it is necessary set the tracefile name in the variables below.
# These files will be stored in the log PVC.
tracingAndLogging:
  bscsErrorTimestamp: ""
  # dtaTracefile: "dta.gmdresdata.trc"
  dtaTracefile: ""
  # dxlTracefile: "dxl.gmdresdata.trc"
  dxlTracefile: ""
  # udrTracefile: "udr.gmdresdata.trc"
  udrTracefile: ""

#A local nodeSelector definition has priority over the global definition.
nodeSelector: {}

# A local affinity definition has priority over the global definition.
# affinity: {}
# Example:
# affinity:
#   nodeAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1a
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1b

#Example:
#nodeSelector:
#  kubernetes.io/hostname: "<hostname>"

tnsnames:
  bscsdb: '{{ tpl .Values.global.tnsnames.bscsdb . }}'

sqlnet:
  ora: '{{ tpl .Values.global.sqlnet.ora . }}'
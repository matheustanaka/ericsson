apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-pms-applicationcontext-sfw-security-openam.xml
data:
  applicationContext-sfw-security-openAM.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
        xmlns:sfw="http://www.ericsson.com/schema/sfw"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
        http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.ericsson.com/schema/sfw http://www.ericsson.com/schema/sfw/sfw.xsd"
        default-autowire="byName">

        <context:annotation-config/>
        <context:component-scan base-package="com.lhs.ccb.sfw.security.idm.plugin.openAM" name-generator="com.lhs.ccb.sfw.spring.DefaultBeanNameGenerator">
              <context:include-filter type="assignable" expression="com.lhs.ccb.sfw.persistence.PersistenceDefinitionBase"/>
        </context:component-scan>

        <bean id="authenticationProvider" class="com.lhs.ccb.sfw.security.idm.plugin.openAM.OpenAMAuthenticationProvider">
             <property name="authenticationRequestPopulator" ref="authenticationRequestPopulator"/>
        </bean>

        <bean id="openAMGateway" class="com.lhs.ccb.sfw.security.idm.plugin.openAM.OpenAMRestGateway">
            <property name="baseURL" value="{{ .Values.global.forgerock.amServerURL }}"/>
        </bean>


      <bean id="passwordInfoManager" class="com.lhs.ccb.sfw.security.idm.plugin.openAM.OpenAMPasswordPolicyManager">
        <property name="policyName" value="{{ .Values.global.forgerock.ldapConfig.policyName }}"/>
        <property name="policyBaseAddress" value="{{ .Values.global.forgerock.ldapConfig.policyBaseAddress }}"/>
        <!--
         if useRandomInitialPassword is set to true, a random initial password will be generated.
         if useRandomInitialPassword is set to false, the password policy set in the Directory Service must allow the usage of username in the password.
         -->
        <property name="useRandomInitialPassword" value="true"/>
        <!--
         Use an own LDAP template with different context source to retrieve password policy information.
         -->
         <property name="ldapTemplate">
              <bean class="com.lhs.ccb.sfw.spring.ldap.core.LdapTemplate">
                  <property name="defaultPageSize" value="999"/>
                  <property name="contextSource">
                      <bean class="org.springframework.ldap.core.support.LdapContextSource">
                        {{- range $key, $val := .Values.global.forgerock.ldapConfig.contextSource }}
                        <property name={{ $key | quote }} ref={{ $val | quote }}/>
                        {{- end }}
                        <property name="pooled" value="{{ .Values.global.forgerock.ldapConfig.contextSource_pooled }}"/>
                      </bean>
                  </property>
                  <property name="ignorePartialResultException" value="true"/>
              </bean>
        </property>

        <property name="outputMappings">
          <map>
              {{- range $key, $val := .Values.global.forgerock.ldapConfig.outputMappings }}
              <entry key={{ $key | quote }} value={{ $val | quote }}/>
              {{- end }}
          </map>
        </property>
        <property name="outputFormatters">
          <map>
            <entry key="ds-cfg-character-set">
              <bean class="com.lhs.ccb.sfw.security.idm.plugin.openAM.CharSetAttributeFormatter"/>
            </entry>
          </map>
        </property>
      </bean>

      <bean id="groupManager" class="com.lhs.ccb.sfw.security.idm.plugin.openAM.OpenAMGroupManager">
            <property name="groupBase" ref="groupBase"/>
            <property name="groupNameField" value="cn"/>
            <property name="groupObjectClassName" value="groupofuniquenames"/>
        </bean>

        <bean id="userDetailsManager" name="userDetailsService" class="com.lhs.ccb.sfw.security.idm.plugin.openAM.OpenAMUserDetailsManager">
            <property name="userBase" ref="userBase"/>
            <property name="defaultPasswordPrefix" value=""/>
            <property name="defaultPasswordPostfix" value="@ebdmp"/>
        </bean>

        <bean id="ldapTemplate" class="com.lhs.ccb.sfw.spring.ldap.core.LdapTemplate">
            <property name="defaultPageSize" value="999"/>
            <property name="contextSource" ref="contextSource"/>
             <property name="ignorePartialResultException" value="true"/>
        </bean>

        <bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
            {{- range $key, $val := .Values.global.forgerock.ldapConfig.contextSource }}
            <property name={{ $key | quote }} ref={{ $val | quote }}/>
            {{- end }}
            <property name="base" ref="{{ .Values.global.forgerock.ldapConfig.contextSource_base }}"/>
            <property name="pooled" value="{{ .Values.global.forgerock.ldapConfig.contextSource_pooled }}"/>
        </bean>

        <!--
         * UserAttributeMapper is used to map ldap query results from OpenDS to user object.
         * The following properties can be configured to match the LDAP of choice (values given here are the default ones):
         *
         * userNameField = "uid";
         * memberOfField = "isMemberOf";
         * preferredCountryField = "preferredlocale";
         * preferredLanguageField = "preferredlanguage";
         * descriptionField = "cn";
         * firstNameField = "givenname";
         * lastNameField = "sn";
         * expirationDateField = "iplanet-am-user-account-life";
         * entryDateField = "createtimestamp";
         * modificationDateField = "modifytimestamp";
         * objectClass = "person";
         * followUpUsernameField = "seeAlso";
         -->
        <bean id="userAttributeMapper" class="com.lhs.ccb.sfw.security.idm.plugin.openAM.UserAttributeMapper">
            <property name="groupBase" ref="groupBase"/>
            <property name="userNameField" value="uid"/>
            <property name="passwordResetField" value="pwdReset"/>
            <property name="passwordChangedDateField" value="pwdChangedTime"/>
            <property name="passwordPolicyField" value = "ds-pwp-password-policy-dn"/>
        </bean>

        <bean id="groupBase" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="ou=groups"/>
        </bean>

        <bean id="userBase" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="ou=people"/>
        </bean>

        <bean id="url" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="{{ .Values.global.forgerock.ldapServer }}"/>
        </bean>

        <bean id="base" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="{{ .Values.global.forgerock.ldapConfig.baseDn }}"/>
        </bean>

        <!-- The EB admin user for forgerock -->
        <bean id="adminUser" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="{{ .Values.global.forgerock.ldapConfig.adminUser }}"/>
        </bean>

        <bean id="password" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="#{usernamePasswordProvider.getTargetNonePassword(adminUser)}"/>
        </bean>

        <!-- The admin user is a forgerock opendj backed user and to login to opendj the string "cn=" needs be added as prefix. -->
        <bean id="userDn" class="com.lhs.ccb.func.spring.beans.factory.config.ConstantHolderFactoryBean">
            <property name="value" value="#{'cn=' + adminUser}"/>
        </bean>

        <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        </bean>
    </beans>

# Default values for dchChart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Allowed: 0,1
replicaCount: 1

imageCredentials:
  eric-bss-eb-dch-collectibles:
    repoPath:
    pullPolicy:
    registry:
      url:
  eric-bss-eb-dch:
    repoPath:
    pullPolicy:
    registry:
      url:

images:
  eric-bss-eb-dch-collectibles:
    name: "eric-bss-eb-dch"
    tag: "22.15.12"
  eric-bss-eb-dch:
    name: "eric-bss-eb-dch"
    tag: "22.15.12"

# Grace period for POD termination, in which the POD can shut down gracefully.
# After that period, k8s will terminate the POD un-gracefully (SIGKILL).
# Adapt this value in case the POD needs more time to terminate gracefully,
#   e.g. in case the PID remains in table DCH_PROCESS after POD termination.
# Note, after the POD has terminated gracefully, the terminationGracePeriodSeconds is stopped immediately.
#       So it does not harm to specify a big value here.
terminationGracePeriodSeconds: 60

#DATA_RETRY_TIME, DATA_RETRY_TIME_MAX
#By default, there is no definition for a time interval in which applications try to reconnect to DaTA.
#If you set the environment variable, the value represents the time interval an application waits
#until it tries to reconnect to DaTA.
#Subsequent connection retries are performed under the following conditions:
# - A double time interval has elapsed and has exceeded a maximum of 60 seconds.
# - A double time interval has elapsed and the value specified by DATA_RETRY_TIME_MAX has been exceeded
dataRetry:
  dataRetryTime:
  dataRetryTimeMax:

resources:
  limits:
    cpu: 1000m
    memory: 5Gi
  requests:
    cpu: 100m
    memory: 256Mi

# A local affinity definition has priority over the global definition.
# affinity: {}
# Example:
# affinity:
#   nodeAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1a
#     - weight: 50
#       preference:
#         matchExpressions:
#         - key: topology.kubernetes.io/zone
#           operator: In
#           values:
#           - us-east-1b



dchCronJobsForCollectibles:
  # CronJobs list for DCH
  - name: "job-bu2"
    schedule: "0 1 * * 0"
    backoffLimit: 0
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    # Customizable start parameters for dch
    startParameters:
      businessUnitId: 2
      # list with Family Group IDs. e.g.: "1,2,3"
      familyGroupId:
      # Trace Level: 0, 1, 2, 3
      traceModeLevel: 0
    # To generate tracefiles, it is necessary set the tracefile name in the variables below.
    # These files will be stored in the log PVC.
    tracingAndLogging:
      bscsErrorTimestamp: ""
      # dtaTracefile: "dta.dch-job-bu2.trc"
      dtaTracefile: ""
      # dxlTracefile: "dxl.dch-job-bu2.trc"
      dxlTracefile: ""
      # udrTracefile: "udr.dch-job-bu2.trc"
      udrTracefile: ""

dchDeploymentsForEvents:
  - name: "events-bu2"
    startParameters:
      businessUnitId: 2
      # list with Family Group IDs. e.g.: "1,2,3"
      familyGroupId:
      # Trace Level: 0, 1, 2, 3
      traceModeLevel: 0
    tracingAndLogging:
      bscsErrorTimestamp: ""
      # dtaTracefile: "dta.dch-events-bu2.trc"
      dtaTracefile: ""
      # dxlTracefile: "dxl.dch-events-bu2.trc"
      dxlTracefile: ""
      # udrTracefile: "udr.dch-events-bu2.trc"
      udrTracefile: ""

# The dchflex-statement-configuration.xml file will use the following parameters for the retrieval (in the database for DCH)
# of customer and invoice information (SELECT_COLLECTIBLE_INFO), contract information (SELECT_CONTRACT_INFO) and
# also configures the mapping of attributes and variables to the columns of the DCH_COLLECTIBLE_CTRL database table.
dchflexStatementConfiguration:
  - buId: 2
    commitCycle: 50000
    collectibleType: "I"
    gracePeriod: 0
    minimumAmount: 0
    eventDateType: 1
    exemptFlag: "Y"
    disputeFlag: "N"
    recordType: "C"
    batchSize:  500000

dchRacSetup:
  waitTime: 500
  totalWaitTime: 30
  numAttempts: 60

tnsnames:
  bscsdb: '{{ tpl .Values.global.tnsnames.bscsdb . }}'

sqlnet:
  ora: '{{ tpl .Values.global.sqlnet.ora . }}'
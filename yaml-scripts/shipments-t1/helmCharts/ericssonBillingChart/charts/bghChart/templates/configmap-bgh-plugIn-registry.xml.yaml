apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-bgh-plugin-registry.xml
data:
  plug-in-registry-1.0.xml: |
    <?xml version="1.0" encoding="utf-8"?>
    <!-- Copyright (c) 2022 Ericsson The copyright in this work is vested in Ericsson Telekommunikation GmbH (hereafter "Ericsson"). The information contained in
         this work (either in whole or in part) is confidential and must not be modified, reproduced, disclosed or disseminated to others or used for purposes other
         than that for which it is supplied, without the prior written permission of Ericsson. If this work or any part hereof is furnished to a third party by
         virtue of a contract with that party, use of this work by such party shall be governed by the express contractual terms between Ericsson, which is party to
         that contract and the said party. The information in this document is subject to change without notice and should not be construed as a commitment by
         Ericsson. Ericsson assumes no responsibility for any errors that may appear in this document. With the appearance of a new version of this document all
         older versions become invalid. All rights reserved. ABSTRACT : XML document e/// Billing 23, Documents Formatting Server This document contains the plug-in-registry / JVM / HTTP settings.
         Author: ematfeh (matthias.fehrenbacher@ericsson.com) VERSION = @(#) lhsj_main/bscs/container/helm/ericssonBillingChart/charts/bghChart/templates/configmap-bgh-plugIn-registry.xml.yaml, , 22.15.12, 22.15.12 @@22.15.12 28-Nov-2022 -->
    <!-- This file is provided as config map -->
    <!DOCTYPE ComponentRegistry [
    <!ELEMENT ComponentRegistry ( Node* )>
    <!ELEMENT Node ( KeyValue | Node )*>
    <!ATTLIST Node
        name    CDATA    #REQUIRED
    >
    <!ELEMENT KeyValue EMPTY >
    <!ATTLIST KeyValue
        key     CDATA    #REQUIRED
        type    ( Boolean | Float | Integer | String | Date ) "String"
        value   CDATA    #REQUIRED
        comment CDATA    #IMPLIED
    >
    ]>
    <ComponentRegistry>
        <Node name="BGH">
            <Node name="libpplug_xalan">
                <KeyValue key="BGH_PPLUG_XALAN_TRACE" value="${BSCS_LOG}/bgh/xalan/Xalan" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="BGH_XALAN_VERBOSE" value="false" type="Boolean" comment="Verbose mode XSLT processor"/>
            </Node>
            <Node name="libpplug_fop">
                <KeyValue key="BGH_PPLUG_FOP_TRACE" value="${BSCS_LOG}/bgh/fop/Fop" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="BGH_DROP_TMP" value="true" type="Boolean" comment="Drop intermediate XSL-FO files"/>
                <KeyValue key="BGH_XALAN_VERBOSE" value="false" type="Boolean" comment="Verbose mode XSLT processor"/>
            </Node>
            <Node name="libpplug_batch">
                <KeyValue key="BGH_PPLUG_BATCH_TRACE" value="${BSCS_LOG}/bgh/batch/Batch" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_PPLUG_BATCH_READ" value="${BSCS_WORKDIR}/DOCS/READ" type="String" comment="Path for batch read"/>
                <KeyValue key="BGH_PPLUG_BATCH_WRITE" value="${BSCS_WORKDIR}/DOCS/WRITE" type="String" comment="Path for batch write"/>
                <KeyValue key="BGH_PPLUG_BATCH_SIZE" value="100" type="Integer" comment="Batch size in KByte"/>
                <KeyValue key="BGH_PPLUG_BATCH_COLLECTION_TIME" value="0" type="Integer" comment="Batch collection time in seconds"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="BGH_XALAN_VERBOSE" value="false" type="Boolean" comment="Verbose mode XSLT processor"/>
            </Node>
            <Node name="libpplug_gnomexml">
                <KeyValue key="BGH_PPLUG_GNOME_TRACE" value="${BSCS_LOG}/bgh/gnome/Gnome" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="SUBSIDIARY_DOC" value="false" type="Boolean" comment="Generate Subsidiary Documents"/>
            </Node>
            <Node name="libpplug_gxmlfop">
                <KeyValue key="BGH_PPLUG_GFOP_TRACE" value="${BSCS_LOG}/bgh/gfop/Gfop" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="BGH_DROP_TMP" value="true" type="Boolean" comment="Drop intermediate XSL-FO files"/>
                <KeyValue key="SUBSIDIARY_DOC" value="false" type="Boolean" comment="Generate Subsidiary Documents"/>
            </Node>
            <Node name="libpplug_edp">
                <KeyValue key="BGH_PPLUG_EDP_TRACE" value="${BSCS_LOG}/bgh/edp/Edp" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="BGH_DROP_TMP" value="true" type="Boolean" comment="Drop intermediate XML files"/>
                <KeyValue key="LIBCURL_VERBOSE" value="true" type="Boolean" comment="Verbose mode LIBCURL"/>
                <KeyValue key="LIBCURL_HTTPS_MODE" value="{{.Values.exstream.securityTls.enable}}" type="Boolean"
                      comment="Decides whether HTTP/HTTPS connection through LIBCURL_URL. If it is false, then HTTP url to be provided in LIBCURL_URL.
                      If it is true, then HTTPS url to be provided in LIBCURL_URL. For HTTPS connection, the key LIBCURL_SERVER_CERTIFICATE should have
                      a valid SSL certificate path for secure connection. For example, if a SSL(TLS) certificate file named ca_sample.pem is present inside the
                      path /home/user/certificate, then the key LIBCURL_SERVER_CERTIFICATE should contain the value as /home/user/certificate/ca_sample.pem"/>
                <KeyValue key="LIBCURL_SERVER_CERTIFICATE" value="/tls/exstream/{{.Values.exstream.securityTls.exstreamClientCertificateFileName}}" type="String" comment="Trusted SSL(TLS) Certificate File Path"/>
                {{ if .Values.exstream.securityTls.enable }}
                <KeyValue key="LIBCURL_URL" value="https://{{.Values.global.httpExstreamUrl.host}}:{{.Values.global.httpExstreamUrl.port}}" type="String" comment="IP address:port for HTTPS connection"/>
                {{ else }}
                <KeyValue key="LIBCURL_URL" value="http://{{.Values.global.httpExstreamUrl.host}}:{{.Values.global.httpExstreamUrl.port}}" type="String" comment="IP address:port for HTTP connection"/>
                {{ end }}
            </Node>
            <Node name="libpplug_gedp">
                <KeyValue key="BGH_PPLUG_GEDP_TRACE" value="${BSCS_LOG}/bgh/gedp/Gedp" type="String" comment="Path and Name prefix of trace file"/>
                <KeyValue key="BGH_DONT_VALIDATE_XML" value="false" type="Boolean" comment="XSD validation"/>
                <KeyValue key="BGH_DONTREGROUP" value="false" type="Boolean" comment="Regrouping"/>
                <KeyValue key="BGH_DROP_TMP" value="true" type="Boolean" comment="Drop intermediate XML files"/>
                <KeyValue key="LIBCURL_VERBOSE" value="true" type="Boolean" comment="Verbose mode LIBCURL"/>
                <KeyValue key="LIBCURL_HTTPS_MODE" value="{{.Values.exstream.securityTls.enable}}" type="Boolean"
                      comment="Decides whether HTTP/HTTPS connection through LIBCURL_URL. If it is false, then HTTP url to be provided in LIBCURL_URL.
                      If it is true, then HTTPS url to be provided in LIBCURL_URL. For HTTPS connection, the key LIBCURL_SERVER_CERTIFICATE should have
                      a valid SSL certificate path for secure connection. For example, if a SSL(TLS) certificate file named ca_sample.pem is present inside the
                      path /home/user/certificate, then the key LIBCURL_SERVER_CERTIFICATE should contain the value as /home/user/certificate/ca_sample.pem"/>
                <KeyValue key="LIBCURL_SERVER_CERTIFICATE" value="/tls/exstream/{{.Values.exstream.securityTls.exstreamClientCertificateFileName}}" type="String" comment="Trusted SSL(TLS) Certificate File Path"/>
                {{ if .Values.exstream.securityTls.enable }}
                <KeyValue key="LIBCURL_URL" value="https://{{.Values.global.httpExstreamUrl.host}}:{{.Values.global.httpExstreamUrl.port}}" type="String" comment="IP address:port for HTTPS connection"/>
                {{ else }}
                <KeyValue key="LIBCURL_URL" value="http://{{.Values.global.httpExstreamUrl.host}}:{{.Values.global.httpExstreamUrl.port}}" type="String" comment="IP address:port for HTTP connection"/>
                {{ end }}
            </Node>
            <Node name="JavaVMOption">
                <!-- can be enhanced / modified by the user -->
                <!--
                    <KeyValue     key="-Djava.class.path="          value="${BSCS_JAR}/bgh.jar:${CLASSPATH}"   type="String"  comment="CLASSPATH must contain the FOP 0.93 jar archives"/>
                -->
                <KeyValue key="-Djava.class.path="
                    value="${BSCS_JAR}/bgh.jar:${BSCS_3PP_JAR}/bgh/batik-all-1.16.jar:${BSCS_3PP_JAR}/bgh/commons-io-2.11.0.jar:${BSCS_3PP_JAR}/bgh/commons-logging-1.0.4.jar:${BSCS_3PP_JAR}/bgh/fontbox-2.0.24.jar:${BSCS_3PP_JAR}/bgh/serializer-2.7.2.jar:${BSCS_3PP_JAR}/bgh/xml-apis-1.4.01.jar:${BSCS_3PP_JAR}/bgh/xml-apis-ext-1.3.04.jar:${BSCS_3PP_JAR}/bgh/xmlgraphics-commons-2.8.jar:${BSCS_3PP_JAR}/bgh/fop.jar"
                    type="String" comment="CLASSPATH must contain the FOP 2.8 jar archives"/>
                <KeyValue key="-Djava.awt.headless=" value="true" type="String" comment="must be set if no X11 window server is available"/>
                <!--
                    <KeyValue     key="-Xms"                        value="64m"                       type="String"  comment="min. heap size"                                  />
                    <KeyValue     key="-Xmx"                        value="256m"                      type="String"  comment="max. heap size"                                  />
                    <KeyValue     key="-Xcheck:"                    value="jni"                       type="String"  comment="perform additional checks for JNI functions"     />
                    <KeyValue     key="-verbose:"                   value="jni"                       type="String"  comment="enable verbose output"                           />
                    <KeyValue     key="-verbose:"                   value="class"                     type="String"  comment="enable verbose output"                           />
                -->
                <KeyValue key="-Xrs" value="" type="String" comment="signal handling"/>
            </Node>
            <Node name="FOP">
                <KeyValue key="FOP_TRACE" value="${BSCS_LOG}/bgh" type="String" comment="Path for FOP trace file"/>
            </Node>
        </Node>
    </ComponentRegistry>

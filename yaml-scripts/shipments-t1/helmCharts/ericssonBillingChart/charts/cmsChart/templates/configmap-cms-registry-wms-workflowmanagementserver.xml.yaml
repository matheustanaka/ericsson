apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-cms-registry-wms-workflowmanagementserver.xml
data:
  Registry_WMS_WorkflowManagementServer.xml: |
    <?xml version="1.0" encoding="utf-8"?>
    <!DOCTYPE ComponentRegistry PUBLIC 'ComponentRegistry.dtd' "ComponentRegistry.dtd" >
    <ComponentRegistry>
        <Node name="FUNC_FRMWK_SRV">
            <KeyValue key="CDFRootDirectory" value="cdf" comment="Root directory for the command definition files. Case sensitive entry."/>
            <KeyValue key="SOIRootDirectory" value="soi" comment="Root directory for the service oriented interface definition files. Case sensitive entry."/>

            <!-- List of files defining SOI's.
                 These files are searched in SOIRootDirectory
                 Filenames should be entered in as "key" attributes,
                 "value" attributes remains empty.
            -->
            <Node name="SOIDefinitions" >
                <KeyValue key="WMI_2.xml" value=""/>
                <KeyValue key="WMI_3.xml" value=""/>
            </Node>

            <!-- List of validation definitions.
                 These files are searched in ValidationRootDirectory
                 Filenames should be entered in as "key" attributes,
                 "value" attributes remains empty.
            -->
            <Node name="ValidationDefinitions" >
                <KeyValue key="WMS_Validation.xml" value=""/>
            </Node>

            <!-- List of listeners implementing ServerStartupListener
                 interface. Each listener entered here will be
                 instantiated using default constructor without
                 parameters and corresponding before and after methods
                 will be called during server initialization process
            -->
            <Node name="StartupListeners" >
                    <KeyValue key="com.lhs.wms.wfmanagementserver.WMSInitializer" value=""/>
                    <KeyValue key="com.lhs.wma.wfms.WFMSInitializer" value=""/>
            </Node>

            <!-- List of listeners implementing ServerShutdown
                 interface. Each listener entered here will be
                 instantiated using default constructor without
                 parameters and corresponding before and after methods
                 will be called during server shutdown
            -->
            <Node name="ShutdownListeners" >
              <KeyValue key="com.lhs.wms.wfmanagementserver.WMSShutdown" value=""/>
            </Node>

            <!-- This node holds the names of all
                 DomainServiceAdapter classes.
            -->
            <Node name="ServiceLayerAdapterNames" >
              <KeyValue key="com.lhs.wms.commondomain.services.AgentSearch" value=""/>
              <KeyValue key="com.lhs.wms.commondomain.services.SessionChange" value=""/>
              <KeyValue key="com.lhs.wms.commondomain.services.UsergroupSearch" value=""/>
              <KeyValue key="com.lhs.wms.commondomain.services.WsdlDirectoryRead" value=""/>
              <KeyValue key="com.lhs.wms.commondomain.services.WebServicesSearch" value=""/>
              <KeyValue key="com.lhs.wms.commondomain.services.WebServiceDefinitionRead" value=""/>
              <KeyValue key="com.lhs.wms.commondomain.services.WebServiceParameterDelete" value=""/>

              <KeyValue key="com.lhs.wms.event.services.EventCreate" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventTypeRead" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventTypeWrite" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventTypeCreate" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventTypeDelete" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventTypeSearch" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventLinkedPartDelete" value=""/>
              <KeyValue key="com.lhs.wms.event.services.EventAttributeDelete" value=""/>

              <KeyValue key="com.lhs.wms.task.services.TaskTypeRead" value=""/>
              <KeyValue key="com.lhs.wms.task.services.TaskTypeCreate" value=""/>
                 <KeyValue key="com.lhs.wms.task.services.TaskTypeDelete" value=""/>
                 <KeyValue key="com.lhs.wms.task.services.TaskTypeSearch" value=""/>
                 <KeyValue key="com.lhs.wms.task.services.TaskTypeWrite" value=""/>

                <KeyValue key="com.lhs.wms.task.services.TaskAssigmentCreate" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskCreate" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskHistoryRead" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskRead" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskRelease" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskReprove" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskSearch" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskWrite" value=""/>
                   <KeyValue key="com.lhs.wms.task.services.TaskWorkflowParameterDelete" value=""/>

              <!-- feature 296742_1_wms - Rafael Werner Begin -->
                   <KeyValue key="com.lhs.wms.task.services.TaskSearchCriteriaRead" value=""/>
                   <!-- feature 296742_1_wms - Rafael Werner Begin -->


                <!-- feature 317893_wms - Rafael Werner Begin -->
                <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntityNotesHistorySearch" value=""/>
                <KeyValue key="com.lhs.wms.wfentity.services.WorkflowDefinitionRead" value=""/>
                <!-- feature 317893_wms - Rafael Werner End -->


              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntityCreate" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntityPartLayoutRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntityRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntitySearch" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntityWrite" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowSearchCriteriaRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowProcessRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEntityErrorRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowPartDefinitionSearch" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowAttributeCreate" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowAttributeRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowAttributeWrite" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowAttributeSearch" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowReassignmentCreate" value=""/>
              <!-- Feature 341875 - fariah - begin -->
              <KeyValue key="com.lhs.wms.wfentity.services.NoteAdd" value=""/>
              <!-- Feature 341875 - fariah - end -->

              <KeyValue key="com.lhs.wms.wfentity.services.ExternalDocumentRead" value=""/>
              <KeyValue key="com.lhs.wms.wfentity.services.OutsideActionExecute" value=""/>

              <KeyValue key="com.lhs.wms.workqueue.services.WorkqueueCreate" value=""/>
              <KeyValue key="com.lhs.wms.workqueue.services.WorkqueueDelete" value=""/>
              <KeyValue key="com.lhs.wms.workqueue.services.WorkqueueDetailsWrite" value=""/>
              <KeyValue key="com.lhs.wms.workqueue.services.WorkqueueRead" value=""/>
              <KeyValue key="com.lhs.wms.workqueue.services.WorkqueueSearch" value=""/>
              <KeyValue key="com.lhs.wms.workqueue.services.WorkqueueWrite" value=""/>

              <KeyValue key="com.lhs.wms.workgroup.services.WorkgroupCreate" value=""/>
              <KeyValue key="com.lhs.wms.workgroup.services.WorkgroupDelete" value=""/>
              <KeyValue key="com.lhs.wms.workgroup.services.WorkgroupDetailsWrite" value=""/>
              <KeyValue key="com.lhs.wms.workgroup.services.WorkgroupRead" value=""/>
              <KeyValue key="com.lhs.wms.workgroup.services.WorkgroupSearch" value=""/>
              <KeyValue key="com.lhs.wms.workgroup.services.WorkgroupWrite" value=""/>

              <KeyValue key="com.lhs.wms.activity.services.ActivityTypeRead" value=""/>
              <KeyValue key="com.lhs.wms.activity.services.ActivityTypeWrite" value=""/>
              <KeyValue key="com.lhs.wms.activity.services.ActivityTypeCreate" value=""/>
              <KeyValue key="com.lhs.wms.activity.services.ActivityTypeDelete" value=""/>
              <KeyValue key="com.lhs.wms.activity.services.ActivityTypeSearch" value=""/>
              <KeyValue key="com.lhs.wms.activity.services.ActivityAttributeDelete" value=""/>
              <KeyValue key="com.lhs.wms.activity.services.ActivityLinkedPartDelete" value=""/>

              <KeyValue key="com.lhs.wms.batchJob.services.BatchJobTaskSearch" value=""/>
              <KeyValue key="com.lhs.wms.batchJob.services.BatchJobWorkflowEntitySearch" value=""/>

              <KeyValue key="com.lhs.wms.wfentity.services.WorkflowEventAttributeWrite" value=""/>
            </Node>

            <!-- This node contains class to subclass mappings.
                 It can be used to customize an implementation
                 class by subclassing. Each customized class
                 needs a KeyValue entry here, mapping the parent
                 class name of the core implementation to a
                 customized class name. Per default this node is empty.
            -->
            <Node name="ClassLookupTable">
            </Node>

            <!-- TOPLink related settings, configuration of
                 persistent domain objects
            -->
            <Node name="Persistence">

                    <!-- Settings for the Java wrapper of NEXTFREE
                         stored procedures.
                    -->
                    <Node name="NEXTFREE">
                        <!-- Specifies fetch size for a particular sequence.
                             If a sequence is found in the list than
                             NEXTFREE.GetNumValues / NEXTFREE.GetStringValues
                             with array interface will be used with specified
                             fetch size. If a sequence isn't found in the list
                             than NEXTFREE.GetValue / NEXTFREE.GetStringValue
                               will be used (no array interface and caching)
                        -->
                        <Node name="FetchSizePerSequence">
                            <KeyValue key="TASK_SEQ" value="25" type="Integer"/>
                              <KeyValue key="WORKFLOW_ENTITY" value="25" type="Integer"/>
                              <KeyValue key="MAX_WE_NUM" value="25" type="Integer"/>
                        </Node>
                </Node>
                   <Node name="OraConstraintViolation">
                       <Node name="OraCodes">
                           <KeyValue key="2290" value="" />
                       </Node>
                    <Node name="constraints">
                        <KeyValue key="CC_WPA_SEARCH_RESULT" value="WMS.InvalidColumnName" />
                     </Node>
                </Node>


              <!-- Contains KeyValue entries holding the package names
                   of all packages with persistent classes. Each of
                   the packages listed here is assumed to contain
                   a class 'BOregister', which must add the descriptors
                   of the package to the list of all application
                   descriptors.
              -->
              <Node name="PackageNamesForBORegistry">
                  <KeyValue key="com.lhs.wms.commondomain" value=""/>
                <KeyValue key="com.lhs.wms.event" value=""/>
                <KeyValue key="com.lhs.wms.task" value=""/>
                <KeyValue key="com.lhs.wms.workqueue" value=""/>
                <KeyValue key="com.lhs.wms.wfentity" value=""/>
                <KeyValue key="com.lhs.wms.workgroup" value=""/>
                <KeyValue key="com.lhs.wms.activity" value=""/>
                <KeyValue key="com.lhs.wms.batchJob" value=""/>
              </Node>

              <!-- Contains a list of reference data classes,
                   that should be refreshed periodically.
              -->
              <Node name="RefreshReferenceData">
                <!-- Example
                <Node name="Reason" >
                    <KeyValue key="CLASS" value="com.lhs.CommonDomain.bscs_core.Reason" />
                    <KeyValue key="ABSOLUTE" type="Boolean" value="true"/>
                    <KeyValue key="START" type="Integer" value="1000" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>
                    <KeyValue key="REPLACE_READALL" type="Boolean" value="true"/>
                  </Node>
                  -->
                <Node name="WorkgroupDaoImpl" >
                  <KeyValue key="CLASS" value="com.lhs.wms.workgroup.dao.impl.WorkgroupDaoImpl" />
                   <KeyValue key="ABSOLUTE" type="Boolean" value="true"/>
                   <KeyValue key="PERIOD" type="Integer" value="20000"/>
                   <KeyValue key="START" type="Integer" value="10" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>
                   <KeyValue key="METHOD" value="deleteWorkgroupUser" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>
                </Node>
                <Node name="WorkqueueDaoImpl" >
                  <KeyValue key="CLASS" value="com.lhs.wms.workqueue.dao.impl.WorkqueueDaoImpl" />
                   <KeyValue key="ABSOLUTE" type="Boolean" value="true"/>
                   <KeyValue key="PERIOD" type="Integer" value="20000"/>
                   <KeyValue key="START" type="Integer" value="10" comment="Milliseconds on which a refresh is initiated. In case ABSOLUTE flag is set, the next refresh is set on next midnight plus this value, otherwise on server start plus this value."/>
                   <KeyValue key="METHOD" value="deleteWorkqueueUser" comment="This value specifies a method that is called on the class this node belongs to. The method must be static without parameter. Using this method it is possible to reset singleton from periodically, e.g. to reset local caches."/>
                </Node>

              </Node>
            </Node> <!-- TOPLink related settings -->

              <KeyValue key="SecurityArea" value="WorkflowManagementServer"
                      comment="A top-element in the permission hierarchy, used to retrieve
                              permissions for this server. See 'PERMISSION' argument of
                             'USER_RIGHT.CHECK' command."
            />


          </Node> <!-- FUNC_FRMWK_SRV -->

          <Node name="WMS Settings">

            <KeyValue key="stringifiedTRUE" value="X"/>
            <KeyValue key="checkForUniqueness" type="Boolean" value="true"/>
            <KeyValue key="NoOfRequiredDigits" type="Integer" value="0"/>
            <KeyValue key="checkPreconditions" type="Boolean" value="true"/>
            <KeyValue key="decimalStringFormatPattern" value="#.#"/>

            <KeyValue key="JobExecutorsStartDelayTime" type="Integer" value="10" comment="null" />

            <KeyValue key="WorkflowThreadPoolCorePoolSize" type="Integer" value="{{ .Values.debtColl.wmsSettings.WorkflowThreadPoolCorePoolSize }}" comment="Core size of the thread pool used for workflow instance tasks."/>
            <KeyValue key="WorkflowThreadPoolMaximumPoolSize" type="Integer" value="{{ .Values.debtColl.wmsSettings.WorkflowThreadPoolMaximumPoolSize }}" comment="Maximum size of the thread pool used for workflow instance tasks. Please adjust connection pool settings in database.properties accordingly: maxLimit must not be lower than WorkflowThreadPoolMaximumPoolSize."/>
            <KeyValue key="WorkflowThreadPoolQueueCapacity" type="Integer" value="{{ .Values.debtColl.wmsSettings.WorkflowThreadPoolQueueCapacity }}" comment="Capacity of the queue for workflow instance tasks before handled by the thread pool. The server can handle max. WorkflowThreadPoolQueueCapacity + WorkflowThreadPoolMaximumPoolSize tasks."/>

            <KeyValue key="WorklflowReassignmentHistoryStepText" type="String"
                value="Workflow reassigned from process definition {0} to {1}"
                comment="Text displayed in the 'step' column for a workflow reassignment. Used by WORKFLOW_PROCESS.READ command" />
            <KeyValue key="WorkflowRestartedHistoryStepText" type="String"
                value="Workflow restarted with process definition {0}"
                comment="Text displayed in the 'step' column for workflow restarted. Used by WORKFLOW_PROCESS.READ command" />
            <KeyValue key="WorklflowEntityMoveHistoryStepText" type="String"
                value="Moved from activity {0} to {1}"
                comment="Text displayed in the 'step' column for a workflow entity move. Used by WORKFLOW_PROCESS.READ command" />


                <!--
                  <Node name="Plugin Settings">
                    <KeyValue key="PluginAdministrator" value="com.lhs.FrameworkExtension.bscs_core.PluginAdministrator"/>
                    <KeyValue key="PluginsEnabled" type="Boolean" value="true"/>
                    <KeyValue key="Plugin descriptors directory" value="/Plugins/"/>
                    <KeyValue key="Plugin names" value="" comment="Parent node for all the plug-in adapters."/>
                  </Node>
                -->
            <KeyValue key="ignoreRequestProcessingEventsWhenWorkflowFinished"
                type="Boolean" value="true"
                comment="Ignore RequestProcessingSucceeded and RequestProcessingFailed events whenk a workflow is finished"/>

                <Node name="Queue Event Settings">

                    <!--  PN 00356691 - silvac - BEGIN -->
                    <KeyValue key="JOB_TYPE_ID_PUB" value="QEE" comment="Job type public identifier for queued event execution"/>
                      <!--  PN 00356691 - silvac - END -->

                      <KeyValue key="JOB_STATUS" value="a" comment="Initial job. Domains are:
                                                            a: Active
                                                            h: On-Hold
                                                            r: Running
                                                            f: Failed
                                                            c: Canceled
                                                            e: Finished"/>

                    <KeyValue key="REMARK" value="Job added by command: " comment="Job remark."/>

                    <!-- First execution period defines wait time for the first tentative to send the event to the workflow. In case the event is successful sent, the job is finished -->
                    <KeyValue key="FIRST_EXECUTION_PERIOD" type="Integer" value="5" comment="Recurring period."/>

                    <KeyValue key="FIRST_EXECUTION_PERIOD_UNIT" type="Integer" value="1"
                          comment="Specifies the time unit of the FIRST_EXECUTION_PERIOD.
                                   These values are summed to the current time to set the job execution date. Domains are:
                                                               null(Empty) - milliseconds
                                                            0 - milliseconds
                                                            1 - minutes
                                                            2 - hours
                                                            3 - days
                                                            4 - weeks
                                                            5 - months"/>

                    <!-- Recurring period defines wait time for the consecutive tentative to send the event to the workflow in case the first one was not successful-->
                    <KeyValue key="RECURRING_PERIOD" type="Integer" value="1" comment="Recurring period."/>


                    <KeyValue key="RECURRING_PERIOD_UNIT" type="Integer" value="2" comment="Specifies the time unit of the RECURRING_PERIOD:
                                                            0 - milliseconds
                                                            1 - minutes
                                                            2 - hours
                                                            3 - days
                                                            4 - weeks
                                                            5 - months"/>

                    <!-- This configuration defines how many times the retry to send the event to the workflow will be made. When this
                    number is achieved and was not possible to send the event. The job is changed to an error state. -->
                    <KeyValue key="MAX_RETRY" type="Integer" value="5" comment="Specifies the maximum number of retries."/>

                </Node>

                <Node name="Adaptors">
                    <KeyValue key="WAB" value="com.lhs.wab.ActionAdaptor"/>
                </Node>

                <Node name="PartDecoratorFunction">
                    <KeyValue key="PartDecorator" value="com.lhs.wms.wfentity.FunctionPartDecorator"/>
                </Node>

                <!-- WFMS Currency -->
                <KeyValue key="WFMSCurrency" value="{{ .Values.debtColl.wmsSettings.WFMSCurrency }}" comment="Currency official of Workflow Engine"/>

                <Node name="WorkqueueUpdateRefreshSettings">
                    <KeyValue key="WMSRefreshUser" type="String" value="WMS"/>
                    <KeyValue key="WMSRefreshCIL" type="String" value="CIL"/>
                    <KeyValue key="WMSRefreshCILVersion" type="String" value="7"/>
                </Node>

                <!-- feature 296742_1_wms Rafael Werner Begin (Map for generic fields) -->
                <Node name="GenericFieldsMap">
                    <KeyValue key="ATTR_STRING_1_VALUE" value="WF_ENTITY_STR_1"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_2_VALUE" value="WF_ENTITY_STR_2"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_3_VALUE" value="WF_ENTITY_STR_3"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_4_VALUE" value="WF_ENTITY_STR_4"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_5_VALUE" value="WF_ENTITY_STR_5"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_6_VALUE" value="WF_ENTITY_STR_6"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_7_VALUE" value="WF_ENTITY_STR_7"    comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_8_VALUE" value="WF_ENTITY_STR_8"    comment="Generic string field"/>
                    <!-- PN 00339170/d - Hugo Prioli - Begin  -->
                    <KeyValue key="ATTR_STRING_9_VALUE"  value="WF_ENTITY_STR_9"       comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_10_VALUE" value="WF_ENTITY_STR_10"      comment="Generic string field"/>
                    <KeyValue key="ATTR_STRING_11_VALUE" value="WF_ENTITY_STR_11"      comment="Generic string field"/>
                    <KeyValue key="ATTR_MONETARY_1_VALUE" value="WF_ENTITY_MONETARY_1" comment="Generic monetary field"/>
                    <KeyValue key="ATTR_MONETARY_2_VALUE" value="WF_ENTITY_MONETARY_2" comment="Generic monetary field"/>
                    <KeyValue key="ATTR_MONETARY_3_VALUE" value="WF_ENTITY_MONETARY_3" comment="Generic monetary field"/>
                    <!-- PN 00339170/d - Hugo Prioli - End  -->
                    <KeyValue key="ATTR_DATE_1_VALUE"   value="WF_ENTITY_DATE_1"   comment="Generic date field"/>
                    <KeyValue key="ATTR_DATE_2_VALUE"   value="WF_ENTITY_DATE_2"   comment="Generic date field"/>
                    <KeyValue key="ATTR_DATE_3_VALUE"   value="WF_ENTITY_DATE_3"   comment="Generic date field"/>
                    <KeyValue key="ATTR_NUMBER_1_VALUE" value="WF_ENTITY_NUMBER_1" comment="Generic number field"/>
                    <KeyValue key="ATTR_NUMBER_2_VALUE" value="WF_ENTITY_NUMBER_2" comment="Generic number field"/>
                    <KeyValue key="ATTR_NUMBER_3_VALUE" value="WF_ENTITY_NUMBER_3" comment="Generic number field"/>
                </Node>
                <!-- feature 296742_1_wms Rafael Werner End -->

                <Node name="WorkflowEntitySearch">
                    <KeyValue key="MaxResultSetSize" type="Integer" value="500" comment="The maximum limit available for a workflow entity search."/>
                    <KeyValue key="DefaultResultSetSize" type="Integer" value="50" comment="Default result set size if no result limit is specified for a search."/>
                </Node>

                <Node name="WorkflowAgencySearch">
                <!-- Search functionalities -->
                    <KeyValue key="DefaultAgencySearchLimit" type="Integer" value="50" comment="Default number of rows displayed as search results if user does not specify a result limit value when performing Workflow Agency Search"/>
                </Node>

                <Node name="WorkflowCancelation">
                    <KeyValue key="CancelationWorkflow" type="String" value="CancelationWorkflow" comment="Cancelation Workflow Name" />
                </Node>
          </Node>
          <!-- WMS Settings -->

    </ComponentRegistry>

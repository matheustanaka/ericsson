apiVersion: v1
kind: ConfigMap
metadata:
  name: eric-bss-eb-cms-applicationcontext-sfw-security.xml
data:
  applicationContext-sfw-security.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
        xmlns:sfw="http://www.ericsson.com/schema/sfw"
        xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.ericsson.com/schema/sfw http://www.ericsson.com/schema/sfw/sfw.xsd"
        default-autowire="byName">

        <!--
        NOTE: this context DOES NOT work standalone. It needs to be loaded in combination with another context providing the following beans:
        - id: authenticationProvider: org.springframework.security.authentication.AuthenticationProvider
        - id: userDetailsManager: srvfrmk.UserDetailsManager
        - id: groupManager: org.springframework.security.provisioning.GroupManager
        The application context providing these information should be configured in the following import statement
        -->

        <!--
        To disable security do the following:
        - Enable the applicationContext-sfw-security-dummy.xml
        - Disable the import statements to other applicationContexts like openAM and activeDirectory
        - If you choose a non-embedded LDAP, please make sure you that you have configured properly ldap.password.xml
        -->

        <!--
        <import resource="classpath*:applicationContext-sfw-security-activeDirectory.xml" />
        <import resource="classpath*:applicationContext-sfw-security-dummy.xml" />
        -->
        <import resource="classpath*:applicationContext-sfw-security-openAM.xml" />

        <!-- Responsible for populating the username password map for the application-->
        <import resource="classpath*:applicationContext-sfw-passwordManagement.xml"/>

        <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
            <constructor-arg>
                <bean class="com.lhs.ccb.func.spring.beans.factory.config.ListMergerFactoryBean">
                    <property name="listNamePrefix" value="roleVoterList." />
                </bean>
            </constructor-arg>
        </bean>

        <context:annotation-config />
        <context:component-scan base-package="com.lhs.ccb.sfw.security" name-generator="com.lhs.ccb.sfw.spring.DefaultBeanNameGenerator">
            <context:include-filter type="assignable" expression="com.lhs.ccb.sfw.persistence.PersistenceDefinitionBase" />
            <!-- exclude all idm plugin -->
            <context:exclude-filter type="regex" expression="com.lhs.ccb.sfw.security.idm.*" />
        </context:component-scan>

        <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
            <constructor-arg>
                <bean class="com.lhs.ccb.func.spring.beans.factory.config.ListMergerFactoryBean">
                    <property name="listNamePrefix" value="authenticationProviderList." />
                </bean>
            </constructor-arg>
        </bean>

        <util:list id="authenticationProviderList.SFWSecurity">
            <ref bean="authenticationProvider" />
        </util:list>

        <bean id="grantedAuthoritiesMapper" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
            <constructor-arg ref="roleHierarchy" />
        </bean>

        <!-- Authorization / Access Decision Voters / etc -->

        <bean id="roleHierarchy" class="com.lhs.ccb.sfw.security.access.hierarchicalroles.ModuleHierarchyBasedRoleHierarchy" >
            <property name="hierarchyDataProvider" ref="hierarchyDataProvider"/>
        </bean>

        <bean id="hierarchyDataProvider" class="com.lhs.ccb.sfw.security.access.hierarchicalroles.ModuleHierarchyBasedRoleHierarchy.HierarchyDataProvider" >
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <util:list id="roleVoterList.SFWSecurity">
            <ref bean="roleVoter" />
        </util:list>

        <bean id="roleVoter" class="com.lhs.ccb.sfw.security.access.vote.PermCodeAwareRoleVoter">
            <property name="rolePrefix" value="" />
        </bean>

        <util:set id="systemUsersForExtendedCache">
             <value>SOIUSER</value>
             <value>SOICS</value>
             <value>SXREG</value>
             <value>SXUSR</value>
             <value>EVHSOICL</value>
             <value>BEE</value>
             <value>OAB</value>
             <value>CAB</value>
             <value>CIL</value>
             <value>MSC</value>
             <value>INTSOIUSR</value>
        </util:set>

        <beans profile="development">
            <util:list id="roleVoterList.SFWSecurityHotDeploy">
                <ref bean="hotDeployedCommandsRoleVoter" />
            </util:list>
            <bean id="hotDeployedCommandsRoleVoter" class="com.lhs.ccb.sfw.security.access.vote.HotDeployedCommandsRoleVoter">
                <property name="rolePrefix" value="" />
            </bean>
        </beans>

    </beans>
